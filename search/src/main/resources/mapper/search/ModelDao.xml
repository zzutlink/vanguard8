<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vanguard8.search.dao.ModelDao">
  <resultMap id="BaseResultMap" type="com.vanguard8.search.entity.SrhModel">
    <id column="model_id" jdbcType="INTEGER" property="modelId" />
    <result column="model_name" jdbcType="VARCHAR" property="modelName" />
    <result column="sql_type_id" jdbcType="INTEGER" property="sqlTypeId" />
    <result column="sql_type" jdbcType="VARCHAR" property="sqlType" />
    <result column="pagination" jdbcType="BIT" property="pagination" />
    <result column="field_str" jdbcType="VARCHAR" property="fieldStr" />
    <result column="sql_str" jdbcType="VARCHAR" property="sqlStr" />
    <result column="proc_str" jdbcType="VARCHAR" property="procStr" />
    <result column="sort_field" jdbcType="VARCHAR" property="sortField" />
    <result column="export_flag" jdbcType="BIT" property="exportFlag" />
    <result column="print_flag" jdbcType="BIT" property="printFlag" />
    <result column="showFooter" jdbcType="BIT" property="showFooter" />
  </resultMap>
  <sql id="Base_Column_List">
    model_id, model_name, sql_type_id, pagination, field_str, sql_str, proc_str, sort_field, export_flag,
    print_flag,if((select count(*) from srh_field where show_footer=1 and srh_field.model_id=srh_model.model_id)>0,1,0) as showFooter
  </sql>
  <sql id="Base_Column_CanShow">
    model_id, model_name, pagination, sort_field, export_flag, print_flag,
    if((select count(*) from srh_field where show_footer=1 and srh_field.model_id=srh_model.model_id)>0,1,0) as showFooter
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from srh_model
    where model_id = #{modelId,jdbcType=INTEGER}
  </select>

  <!--查询模板可传递到前端的数据，例如是否分页等，Sql语句等不允许传递到前端-->
  <select id="selectModelForClient" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_CanShow" />
    from srh_model
    where model_id = #{modelId,jdbcType=INTEGER}
  </select>

  <select id="selectModelList" parameterType="String" resultMap="BaseResultMap">
    select srh_model.model_id, srh_model.model_name, srh_model.sql_type_id, srh_model.pagination,srh_model.field_str,
      srh_model.sql_str, srh_model.proc_str, srh_model.sort_field, srh_model.export_flag, srh_model.print_flag,
      srh_sql_type.sql_type
    from srh_model
    inner join srh_sql_type on srh_model.sql_type_id=srh_sql_type.sql_type_id
    where srh_model.model_name like concat('%',#{modelName},'%')
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from srh_model
    where model_id = #{modelId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.vanguard8.search.entity.SrhModel">
    <!--<selectKey keyProperty="modelId" order="BEFORE" resultType="java.lang.Integer">-->
      <!--select-->
      <!--if( exists (select 1 from srh_model order by model_id limit 1),-->
      <!--(select model_id+1 from srh_model order by model_id desc limit 1),-->
      <!--1-->
      <!--)-->
      <!--from dual-->
    <!--</selectKey>-->
    insert into srh_model
    values (#{modelId,jdbcType=INTEGER}, #{modelName,jdbcType=VARCHAR}, #{sqlTypeId,jdbcType=INTEGER},
      #{pagination,jdbcType=BIT}, #{fieldStr,jdbcType=VARCHAR}, #{sqlStr,jdbcType=VARCHAR},
      #{procStr,jdbcType=VARCHAR}, #{sortField,jdbcType=VARCHAR},
      #{exportFlag,jdbcType=BIT}, #{printFlag,jdbcType=BIT})
  </insert>

  <update id="updateByPrimaryKey">
    update srh_model
    set model_id = #{model.modelId,jdbcType=INTEGER},
      model_name = #{model.modelName,jdbcType=VARCHAR},
      sql_type_id = #{model.sqlTypeId,jdbcType=INTEGER},
      pagination = #{model.pagination,jdbcType=BIT},
      field_str= #{model.fieldStr,jdbcType=VARCHAR},
      sql_str = #{model.sqlStr,jdbcType=VARCHAR},
      proc_str= #{model.procStr,jdbcType=VARCHAR},
      sort_field = #{model.sortField,jdbcType=VARCHAR},
      export_flag = #{model.exportFlag,jdbcType=BIT},
      print_flag = #{model.printFlag,jdbcType=BIT}
    where model_id = #{oModelId,jdbcType=INTEGER}
  </update>

  <!--执行一个sql语句返回结果集-->
  <select id="executeSelect" parameterType="String" resultType="java.util.HashMap">
        ${value}
    </select>

  <!--执行一个sql语句返回结果集的数量-->
  <select id="executeCalc" parameterType="String" resultType="java.math.BigDecimal">
        ${value}
    </select>

  <!--执行调用存储过程，返回结果集-->
    <select id="executeSelectByProc" parameterType="String" resultType="java.util.HashMap" statementType="CALLABLE">
        ${value}
    </select>
</mapper>