08:35:37.014 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
08:35:37.021 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
08:35:37.024 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
08:35:41.102 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
08:35:41.103 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
08:35:41.217 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
08:35:42.262 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 6.171 seconds (JVM running for 7.611)
08:35:46.063 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:35:46.063 logback DEBUG c.v.interceptor.AuthInterceptor - /base/base
08:35:46.067 logback DEBUG c.v.interceptor.AuthInterceptor - 未找到对应的session值
08:35:46.068 logback DEBUG c.v.interceptor.AuthInterceptor - 普通登录页面跳转……
08:35:46.087 logback DEBUG c.v.f.controller.LoginController - login/index
08:35:46.504 logback DEBUG c.v.f.controller.LoginController - /login/code
08:35:46.511 logback DEBUG c.v.f.controller.LoginController - login/index
08:35:46.838 logback DEBUG c.v.f.controller.LoginController - /login/code
08:35:51.589 logback DEBUG c.v.f.controller.LoginController - admin----111
08:35:51.619 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==>  Preparing: select a.*,b.flag_name,c.ds_code,c.ds_name,c.ds_total_name,c.ds_flag,c.lock_flag from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id where a.flag_id=1 and a.login_name = ? 
08:35:51.712 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==> Parameters: admin(String)
08:35:51.733 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - <==      Total: 1
08:35:51.804 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:35:51.804 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
08:35:52.360 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:35:52.360 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
08:35:52.411 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.* from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by a.func_code 
08:35:52.418 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
08:35:52.432 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
08:35:52.434 logback DEBUG c.v.f.controller.FunctionController - 001---001
08:35:52.434 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
08:35:52.434 logback DEBUG c.v.f.controller.FunctionController - 002---002
08:35:52.434 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
08:35:52.434 logback DEBUG c.v.f.controller.FunctionController - 003---003000
08:35:52.434 logback DEBUG c.v.f.controller.FunctionController - 004---004
08:35:52.435 logback DEBUG c.v.f.controller.FunctionController - 005---005
08:35:52.435 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
08:35:52.435 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
08:35:52.435 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
08:35:52.436 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
08:35:52.436 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
08:35:52.436 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
08:35:52.436 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
08:35:52.436 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
08:35:52.436 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
08:36:34.977 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:36:34.978 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
08:36:35.408 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:36:35.408 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
08:36:35.409 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.* from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by a.func_code 
08:36:35.409 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
08:36:35.417 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
08:36:35.418 logback DEBUG c.v.f.controller.FunctionController - 001---001
08:36:35.418 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
08:36:35.419 logback DEBUG c.v.f.controller.FunctionController - 002---002
08:36:35.419 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
08:36:35.419 logback DEBUG c.v.f.controller.FunctionController - 003---003000
08:36:35.419 logback DEBUG c.v.f.controller.FunctionController - 004---004
08:36:35.419 logback DEBUG c.v.f.controller.FunctionController - 005---005
08:36:35.419 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
08:36:35.419 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
08:36:35.419 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
08:36:35.419 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
08:36:35.419 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
08:36:35.420 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
08:36:35.420 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
08:36:35.420 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
08:36:35.420 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
08:39:31.074 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:39:31.075 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
08:39:31.459 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:39:31.459 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
08:39:31.465 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.* from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by a.func_code 
08:39:31.466 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
08:39:31.472 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
08:39:31.473 logback DEBUG c.v.f.controller.FunctionController - 001---001
08:39:31.473 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
08:39:31.473 logback DEBUG c.v.f.controller.FunctionController - 002---002
08:39:31.473 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
08:39:31.473 logback DEBUG c.v.f.controller.FunctionController - 003---003000
08:39:31.473 logback DEBUG c.v.f.controller.FunctionController - 004---004
08:39:31.473 logback DEBUG c.v.f.controller.FunctionController - 005---005
08:39:31.473 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
08:39:31.474 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
08:39:31.474 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
08:39:31.474 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
08:39:31.474 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
08:39:31.474 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
08:39:31.474 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
08:39:31.474 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
08:39:31.474 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
08:39:52.465 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:39:52.465 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
08:39:52.890 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:39:52.891 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
08:39:52.893 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.* from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by a.func_code 
08:39:52.894 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
08:39:52.899 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
08:39:52.900 logback DEBUG c.v.f.controller.FunctionController - 001---001
08:39:52.900 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
08:39:52.900 logback DEBUG c.v.f.controller.FunctionController - 002---002
08:39:52.900 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
08:39:52.900 logback DEBUG c.v.f.controller.FunctionController - 003---003000
08:39:52.901 logback DEBUG c.v.f.controller.FunctionController - 004---004
08:39:52.901 logback DEBUG c.v.f.controller.FunctionController - 005---005
08:39:52.901 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
08:39:52.901 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
08:39:52.901 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
08:39:52.901 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
08:39:52.901 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
08:39:52.901 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
08:39:52.901 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
08:39:52.901 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
08:39:52.901 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
08:41:05.653 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
08:41:05.653 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
08:41:05.654 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
08:41:07.143 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
08:41:07.144 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
08:41:07.174 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
08:41:07.709 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.15 seconds (JVM running for 333.049)
08:41:25.784 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:41:25.785 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
08:41:26.341 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:41:26.341 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
08:41:26.350 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.* from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by a.order_value,a.func_code 
08:41:26.351 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
08:41:26.361 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
08:41:26.363 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
08:41:26.404 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:41:26.404 logback DEBUG c.v.interceptor.AuthInterceptor - /error
08:42:12.059 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
08:42:12.060 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
08:42:12.060 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
08:42:14.377 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
08:42:14.378 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
08:42:14.432 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
08:42:15.445 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 3.511 seconds (JVM running for 400.783)
08:42:18.324 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
08:42:18.324 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
08:42:18.325 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
08:42:19.581 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
08:42:19.581 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
08:42:19.611 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
08:42:20.053 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.809 seconds (JVM running for 405.392)
08:42:20.249 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:42:20.251 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
08:42:20.644 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:42:20.644 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
08:42:20.650 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.* from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by concat(a.order_value,a.func_code) 
08:42:20.652 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
08:42:20.663 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
08:42:20.665 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
08:42:20.681 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:42:20.681 logback DEBUG c.v.interceptor.AuthInterceptor - /error
08:43:42.193 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:43:42.194 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
08:43:42.612 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:43:42.612 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
08:43:42.613 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.* from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by concat(a.order_value,a.func_code) 
08:43:42.613 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
08:43:42.618 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
08:43:42.619 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
08:43:42.619 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
08:43:42.619 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
08:43:42.619 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
08:43:42.619 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
08:43:42.619 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
08:43:42.619 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
08:43:42.620 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
08:43:42.620 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
08:43:42.620 logback DEBUG c.v.f.controller.FunctionController - 001---001
08:43:42.620 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
08:43:42.620 logback DEBUG c.v.f.controller.FunctionController - 002---002
08:43:42.620 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
08:43:42.620 logback DEBUG c.v.f.controller.FunctionController - 003---003000
08:43:42.620 logback DEBUG c.v.f.controller.FunctionController - 004---004
08:43:42.620 logback DEBUG c.v.f.controller.FunctionController - 005---005
08:46:29.782 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:46:29.783 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
08:46:30.149 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:46:30.149 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
08:46:30.150 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.* from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by concat(a.order_value,a.func_code) 
08:46:30.151 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
08:46:30.155 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 001---001
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 002---002
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 003---003000
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 004---004
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 005---005
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
08:46:30.156 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
08:46:44.979 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
08:46:44.979 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
08:46:44.979 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
08:46:46.315 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
08:46:46.316 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
08:46:46.339 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
08:46:46.753 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.863 seconds (JVM running for 672.085)
08:46:49.380 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:46:49.382 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
08:46:49.751 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:46:49.751 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
08:46:49.757 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.* from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by concat(1001+a.order_value,a.func_code) 
08:46:49.758 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
08:46:49.767 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
08:46:49.769 logback DEBUG c.v.f.controller.FunctionController - 002---002
08:46:49.772 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
08:46:49.772 logback DEBUG c.v.f.controller.FunctionController - 003---003000
08:46:49.772 logback DEBUG c.v.f.controller.FunctionController - 004---004
08:46:49.772 logback DEBUG c.v.f.controller.FunctionController - 005---005
08:46:49.773 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
08:46:49.773 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
08:46:49.773 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
08:46:49.773 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
08:46:49.773 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
08:46:49.773 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
08:46:49.773 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
08:46:49.773 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
08:46:49.773 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
08:46:49.773 logback DEBUG c.v.f.controller.FunctionController - 001---001
08:46:49.773 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
08:49:53.967 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:49:53.968 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
08:49:54.307 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:49:54.307 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
08:49:54.309 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by func_code 
08:49:54.317 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
08:49:54.321 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 6
08:49:55.819 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:49:55.819 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
08:49:55.845 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
08:49:55.846 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
08:49:55.848 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 6
08:51:10.397 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
08:51:10.398 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
08:51:10.398 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
08:51:11.970 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
08:51:11.971 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
08:51:11.994 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
08:51:12.563 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.24 seconds (JVM running for 937.887)
08:51:16.802 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
08:51:16.802 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
08:51:16.802 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
08:51:18.703 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
08:51:18.703 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
08:51:18.756 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
08:51:19.481 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.824 seconds (JVM running for 944.805)
08:51:22.104 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
08:51:22.104 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
08:51:22.105 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
08:51:23.290 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
08:51:23.291 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
08:51:23.317 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
08:51:23.728 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.691 seconds (JVM running for 949.052)
08:52:08.341 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:52:08.342 logback DEBUG c.v.interceptor.AuthInterceptor - /base/mana
08:52:08.786 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:52:08.786 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
08:52:08.792 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select field_type as id,field_type_name as text from bas_field_type 
08:52:08.793 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
08:52:08.796 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 5
08:52:09.115 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:52:09.116 logback DEBUG c.v.interceptor.AuthInterceptor - /base/getBaseMain
08:52:09.213 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==>  Preparing: SELECT count(0) FROM bas_main WHERE bs_name LIKE concat('%', ?, '%') AND table_name LIKE concat('%', ?, '%') 
08:52:09.215 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==> Parameters: (String), (String)
08:52:09.217 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - <==      Total: 1
08:52:09.221 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==>  Preparing: select * from bas_main where bs_name like concat('%',?,'%') and table_name like concat('%',?,'%') LIMIT ? 
08:52:09.223 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==> Parameters: (String), (String), 20(Integer)
08:52:09.225 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - <==      Total: 1
08:52:10.549 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:52:10.549 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
08:52:10.818 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:52:10.818 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
08:52:10.824 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by concat(1001+order_value,func_code) 
08:52:10.825 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
08:52:10.830 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 6
08:52:27.018 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:52:27.018 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
08:52:27.278 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:52:27.279 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
08:52:27.280 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by concat(1001+order_value,func_code) 
08:52:27.280 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
08:52:27.283 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 6
08:53:08.332 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:53:08.332 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
08:53:08.570 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:53:08.570 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
08:53:08.572 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by concat(1001+order_value,func_code) 
08:53:08.572 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
08:53:08.577 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 6
08:53:16.553 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:53:16.553 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
08:53:16.556 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by concat(1001+order_value,func_code) 
08:53:16.557 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
08:53:16.560 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
08:53:18.242 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:53:18.242 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
08:53:18.243 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by concat(1001+order_value,func_code) 
08:53:18.244 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
08:53:18.245 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
08:53:19.371 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:53:19.371 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
08:53:19.373 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by concat(1001+order_value,func_code) 
08:53:19.374 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
08:53:19.376 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
08:53:20.036 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:53:20.037 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
08:53:20.039 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by concat(1001+order_value,func_code) 
08:53:20.041 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 5000(Integer)
08:53:20.044 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
08:53:20.661 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:53:20.662 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
08:53:20.668 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by concat(1001+order_value,func_code) 
08:53:20.670 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999000(Integer)
08:53:20.674 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
08:53:21.707 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
08:53:21.708 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
08:53:21.710 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by concat(1001+order_value,func_code) 
08:53:21.710 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 1000(Integer)
08:53:21.713 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
09:00:42.999 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
09:00:42.999 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
09:00:43.278 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
09:00:43.278 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
09:00:43.279 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by concat(1001+order_value,func_code) 
09:00:43.280 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
09:00:43.283 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 6
09:00:44.399 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
09:00:44.400 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
09:00:44.401 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
09:00:44.401 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
09:00:44.403 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 6
09:00:59.691 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
09:00:59.691 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
09:00:59.693 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
09:00:59.693 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
09:00:59.696 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 6
09:09:17.956 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
09:09:17.956 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
09:09:18.243 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
09:09:18.243 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
09:09:18.245 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by concat(1001+order_value,func_code) 
09:09:18.245 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
09:09:18.247 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 6
09:09:19.963 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
09:09:19.963 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
09:09:19.965 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
09:09:19.965 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
09:09:19.966 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 6
09:10:13.718 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
09:10:13.718 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
09:10:13.719 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
09:10:16.069 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
09:10:16.070 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
09:10:16.109 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
09:10:17.167 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 3.54 seconds (JVM running for 2082.461)
09:10:21.720 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
09:10:21.721 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
09:10:21.721 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
09:10:24.176 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
09:10:24.177 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
09:10:24.247 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
09:10:25.166 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 3.515 seconds (JVM running for 2090.461)
09:10:31.877 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
09:10:31.883 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
09:10:31.883 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
09:10:33.173 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
09:10:33.173 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
09:10:33.195 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
09:10:33.599 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.812 seconds (JVM running for 2098.893)
12:41:00.744 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:41:00.745 logback DEBUG c.v.interceptor.AuthInterceptor - /base/base
12:41:00.746 logback DEBUG c.v.interceptor.AuthInterceptor - 未找到对应的session值
12:41:00.746 logback DEBUG c.v.interceptor.AuthInterceptor - 普通登录页面跳转……
12:41:00.752 logback DEBUG c.v.f.controller.LoginController - login/index
12:41:00.937 logback DEBUG c.v.f.controller.LoginController - /login/code
12:41:00.970 logback DEBUG c.v.f.controller.LoginController - login/index
12:41:01.148 logback DEBUG c.v.f.controller.LoginController - /login/code
12:41:06.908 logback DEBUG c.v.f.controller.LoginController - admin----111
12:41:06.916 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==>  Preparing: select a.*,b.flag_name,c.ds_code,c.ds_name,c.ds_total_name,c.ds_flag,c.lock_flag from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id where a.flag_id=1 and a.login_name = ? 
12:41:06.917 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==> Parameters: admin(String)
12:41:06.919 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - <==      Total: 1
12:41:06.957 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:41:06.957 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
12:41:07.323 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:41:07.323 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
12:41:07.330 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.* from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by concat(1001+a.order_value,a.func_code) 
12:41:07.331 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
12:41:07.337 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
12:41:07.338 logback DEBUG c.v.f.controller.FunctionController - 002---002
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 003---003000
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 004---004
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 005---005
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 001---001
12:41:07.339 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
12:41:12.499 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:41:12.499 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
12:41:12.752 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:41:12.752 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
12:41:12.757 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
12:41:12.759 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
12:41:12.764 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
12:41:14.376 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:41:14.376 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
12:41:14.378 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.*,ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by a.order_value,a.func_code 
12:41:14.387 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
12:41:14.392 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 17
12:41:57.531 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
12:41:57.531 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
12:41:57.531 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
12:41:58.859 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
12:41:58.859 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
12:41:58.885 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
12:41:59.322 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.854 seconds (JVM running for 14781.54)
12:42:05.176 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:42:05.183 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
12:42:05.202 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.*,ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by concat(1001+a.order_value,a.func_code) 
12:42:05.203 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
12:42:05.215 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 17
12:42:10.447 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:42:10.448 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
12:42:10.666 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:42:10.666 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
12:42:10.668 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
12:42:10.669 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
12:42:10.673 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
12:42:12.635 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:42:12.635 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
12:42:12.636 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.*,ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by concat(1001+a.order_value,a.func_code) 
12:42:12.636 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
12:42:12.638 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 17
12:43:25.359 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:43:25.360 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
12:43:25.547 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:43:25.547 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
12:43:25.549 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
12:43:25.549 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
12:43:25.554 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
12:43:27.516 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:43:27.516 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
12:43:27.521 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.*,ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by concat(1001+a.order_value,a.func_code) 
12:43:27.521 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
12:43:27.524 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 17
12:44:00.395 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:44:00.395 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
12:44:00.397 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.*,ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by concat(1001+a.order_value,a.func_code) 
12:44:00.397 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
12:44:00.400 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 17
12:48:12.963 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
12:48:12.963 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
12:48:12.964 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
12:48:14.441 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
12:48:14.442 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
12:48:14.464 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
12:48:14.905 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.092 seconds (JVM running for 15157.113)
12:48:22.782 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
12:48:22.783 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
12:48:22.783 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
12:48:24.304 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
12:48:24.305 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
12:48:24.330 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
12:48:24.931 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.242 seconds (JVM running for 15167.138)
12:48:28.034 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
12:48:28.034 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
12:48:28.035 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
12:48:29.349 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
12:48:29.349 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
12:48:29.376 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
12:48:29.775 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.805 seconds (JVM running for 15171.983)
12:48:30.956 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:48:30.958 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
12:48:30.964 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.*,ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by a.order_value,a.func_code 
12:48:30.966 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
12:48:30.971 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 17
12:48:40.014 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:48:40.015 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
12:48:40.326 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:48:40.326 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
12:48:40.331 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
12:48:40.331 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
12:48:40.333 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 6
12:48:45.708 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:48:45.708 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
12:48:46.025 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:48:46.025 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
12:48:46.026 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
12:48:46.026 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
12:48:46.028 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 6
12:48:47.364 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:48:47.365 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
12:48:47.366 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
12:48:47.366 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 1000(Integer)
12:48:47.369 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
12:48:47.896 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:48:47.897 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
12:48:47.898 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
12:48:47.898 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 5000(Integer)
12:48:47.900 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
12:48:48.844 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:48:48.844 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
12:48:48.845 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
12:48:48.845 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
12:48:48.846 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
12:48:49.618 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:48:49.618 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
12:48:49.620 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
12:48:49.620 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
12:48:49.624 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
12:48:50.443 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:48:50.443 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
12:48:50.446 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
12:48:50.447 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
12:48:50.448 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
12:48:52.656 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:48:52.656 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
12:48:52.659 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
12:48:52.659 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999000(Integer)
12:48:52.663 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
12:48:53.778 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:48:53.778 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
12:48:53.780 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
12:48:53.780 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 5000(Integer)
12:48:53.783 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
12:49:25.889 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:49:25.889 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
12:49:26.111 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:49:26.111 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
12:49:26.112 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
12:49:26.113 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
12:49:26.114 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 6
12:49:27.496 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:49:27.497 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
12:49:27.498 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select * from sys_function where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
12:49:27.498 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 5000(Integer)
12:49:27.499 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
12:49:28.848 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:49:28.848 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
12:49:29.026 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:49:29.026 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
12:49:29.028 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
12:49:29.029 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
12:49:29.032 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
12:49:30.550 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
12:49:30.551 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
12:49:30.551 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.*,ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by a.order_value,a.func_code 
12:49:30.552 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
12:49:30.554 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 17
12:50:08.823 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
12:50:08.823 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
12:50:08.823 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
12:50:15.263 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
12:50:15.264 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
12:50:15.264 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
12:50:17.279 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
12:50:17.280 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
12:50:17.305 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
12:50:17.789 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.606 seconds (JVM running for 15279.994)
12:50:31.898 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
12:50:31.898 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
12:50:31.898 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
12:50:33.536 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
12:50:33.537 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
12:50:33.559 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
12:50:34.113 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.549 seconds (JVM running for 15296.318)
12:50:38.269 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
12:50:38.269 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
12:50:38.269 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
12:50:39.468 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
12:50:39.469 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
12:50:39.489 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
12:50:39.909 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.704 seconds (JVM running for 15302.113)
13:17:17.360 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:17:17.360 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:17:17.360 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:17:18.743 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:17:18.743 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:17:18.765 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:17:19.167 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.163 seconds (JVM running for 16901.33)
13:18:26.825 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:18:26.826 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:18:26.826 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:18:36.159 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:18:36.160 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:18:36.160 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:18:37.550 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:18:37.551 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:18:37.572 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:18:38.007 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.958 seconds (JVM running for 16980.167)
13:18:54.350 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:18:54.350 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:18:54.351 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:19:04.569 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:19:04.569 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:19:04.569 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:19:07.559 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:19:07.559 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:19:07.586 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:19:08.245 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 3.77 seconds (JVM running for 17010.405)
13:19:27.137 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:19:27.138 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:19:27.138 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:19:35.223 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:19:35.223 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:19:35.223 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:19:38.345 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:19:38.346 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:19:38.390 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:19:39.249 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 4.115 seconds (JVM running for 17041.408)
13:19:45.823 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:19:45.824 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:19:45.824 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:19:49.281 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:19:49.282 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:19:49.333 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:19:50.348 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 5.187 seconds (JVM running for 17052.506)
13:19:57.560 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:19:57.560 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:19:57.561 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:19:59.799 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:19:59.800 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:19:59.841 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:20:00.796 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 3.33 seconds (JVM running for 17062.954)
13:20:07.273 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:20:07.274 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:20:07.274 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:20:33.621 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:20:33.621 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:20:33.622 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:20:37.402 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:20:37.404 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:20:37.821 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:20:39.759 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 6.358 seconds (JVM running for 17101.916)
13:20:45.302 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:20:45.302 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:20:45.302 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:20:50.591 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:20:50.593 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:20:51.213 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:20:52.426 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 7.244 seconds (JVM running for 17114.583)
13:21:13.915 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:21:13.916 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:21:13.916 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:21:16.709 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:21:16.710 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:21:16.894 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:21:18.096 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 4.375 seconds (JVM running for 17140.252)
13:21:26.881 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:21:26.881 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:21:26.882 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:21:30.579 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:21:30.580 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:21:30.618 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:21:31.223 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 4.479 seconds (JVM running for 17153.379)
13:21:48.617 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 83420 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:21:48.618 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:21:48.618 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:21:52.785 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:21:52.786 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:21:52.808 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:21:56.382 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:21:56.387 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:21:56.389 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:22:02.849 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:22:02.851 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:22:02.962 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:22:04.062 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 8.437 seconds (JVM running for 10.407)
13:22:53.585 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:22:53.585 logback DEBUG c.v.interceptor.AuthInterceptor - /base/base
13:22:53.591 logback DEBUG c.v.interceptor.AuthInterceptor - 未找到对应的session值
13:22:53.591 logback DEBUG c.v.interceptor.AuthInterceptor - 普通登录页面跳转……
13:22:53.611 logback DEBUG c.v.f.controller.LoginController - login/index
13:22:53.970 logback DEBUG c.v.f.controller.LoginController - /login/code
13:22:54.001 logback DEBUG c.v.f.controller.LoginController - login/index
13:22:54.249 logback DEBUG c.v.f.controller.LoginController - /login/code
13:22:59.212 logback DEBUG c.v.f.controller.LoginController - admin----111
13:22:59.239 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==>  Preparing: select a.*,b.flag_name,c.ds_code,c.ds_name,c.ds_total_name,c.ds_flag,c.lock_flag from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id where a.flag_id=1 and a.login_name = ? 
13:22:59.333 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==> Parameters: admin(String)
13:22:59.351 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - <==      Total: 1
13:22:59.419 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:22:59.419 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
13:22:59.936 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:22:59.936 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
13:22:59.941 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.* from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by a.order_value,a.func_code 
13:22:59.948 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
13:22:59.968 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
13:22:59.969 logback DEBUG c.v.f.controller.FunctionController - 002---002
13:22:59.970 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
13:22:59.970 logback DEBUG c.v.f.controller.FunctionController - 003---003000
13:22:59.970 logback DEBUG c.v.f.controller.FunctionController - 004---004
13:22:59.970 logback DEBUG c.v.f.controller.FunctionController - 005---005
13:22:59.970 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
13:22:59.971 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
13:22:59.971 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
13:22:59.971 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
13:22:59.971 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
13:22:59.971 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
13:22:59.972 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
13:22:59.972 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
13:22:59.972 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
13:22:59.972 logback DEBUG c.v.f.controller.FunctionController - 001---001
13:22:59.972 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
13:23:58.896 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:23:58.897 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:23:58.897 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:24:01.473 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:24:01.474 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:24:01.547 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:24:02.387 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 3.578 seconds (JVM running for 128.73)
13:24:06.407 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:24:06.407 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:24:06.407 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:24:07.646 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:24:07.647 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:24:07.672 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:24:08.082 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.74 seconds (JVM running for 134.425)
13:24:23.049 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:24:23.050 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:24:23.050 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:24:24.288 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:24:24.288 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:24:24.316 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:24:24.710 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.731 seconds (JVM running for 151.052)
13:24:50.819 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:24:50.819 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:24:50.819 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:24:52.681 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:24:52.682 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:24:52.717 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:24:53.559 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.863 seconds (JVM running for 179.901)
13:25:25.495 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:25:25.495 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:25:25.495 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:25:27.326 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:25:27.327 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:25:27.392 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:25:27.984 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.556 seconds (JVM running for 214.325)
13:26:20.874 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:26:20.875 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:26:20.875 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:26:22.770 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:26:22.770 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:26:22.799 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:26:23.434 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.66 seconds (JVM running for 269.774)
13:26:33.950 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:26:33.950 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:26:33.950 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:26:35.111 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:26:35.112 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:26:35.133 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:26:35.522 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.629 seconds (JVM running for 281.862)
13:26:35.561 logback DEBUG c.v.f.controller.LoginController - login/index
13:26:35.785 logback DEBUG c.v.f.controller.LoginController - /login/code
13:26:39.721 logback DEBUG c.v.f.controller.LoginController - admin----111
13:26:39.731 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==>  Preparing: select a.*,b.flag_name,c.ds_code,c.ds_name,c.ds_total_name,c.ds_flag,c.lock_flag from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id where a.flag_id=1 and a.login_name = ? 
13:26:39.733 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==> Parameters: admin(String)
13:26:39.736 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - <==      Total: 1
13:26:39.759 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:26:39.760 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
13:26:40.127 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:26:40.127 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
13:26:40.134 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by a.order_value,a.func_code 
13:26:40.146 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
13:26:40.235 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:26:40.235 logback DEBUG c.v.interceptor.AuthInterceptor - /error
13:27:08.399 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:27:08.399 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:27:08.399 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:27:10.432 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:27:10.433 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:27:10.466 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:27:11.070 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.802 seconds (JVM running for 317.408)
13:27:16.717 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:27:16.718 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:27:16.718 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:27:18.863 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:27:18.863 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:27:18.905 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:27:19.764 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 3.124 seconds (JVM running for 326.102)
13:27:30.597 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:27:30.599 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
13:27:31.103 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:27:31.103 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
13:27:31.111 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by a.order_value,a.func_code 
13:27:31.113 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
13:27:31.125 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
13:27:31.127 logback DEBUG c.v.f.controller.FunctionController - 002---002
13:27:31.127 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
13:27:31.127 logback DEBUG c.v.f.controller.FunctionController - 003---003000
13:27:31.127 logback DEBUG c.v.f.controller.FunctionController - 004---004
13:27:31.127 logback DEBUG c.v.f.controller.FunctionController - 005---005
13:27:31.127 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
13:27:31.127 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
13:27:31.127 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
13:27:31.127 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
13:27:31.127 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
13:27:31.128 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
13:27:31.128 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
13:27:31.128 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
13:27:31.128 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
13:27:31.128 logback DEBUG c.v.f.controller.FunctionController - 001---001
13:27:31.128 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
13:30:20.164 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:30:20.165 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:30:20.165 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:30:21.519 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:30:21.520 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:30:21.540 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:30:21.975 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.884 seconds (JVM running for 508.309)
13:30:33.936 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:30:33.937 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:30:33.937 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:30:35.084 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:30:35.084 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:30:35.105 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:30:35.511 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.632 seconds (JVM running for 521.844)
13:30:44.972 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:30:44.972 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:30:44.972 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:30:46.176 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:30:46.176 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:30:46.197 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:30:46.625 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.71 seconds (JVM running for 532.958)
13:30:52.581 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:30:52.581 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:30:52.582 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:30:54.366 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:30:54.366 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:30:54.388 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:30:54.882 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.466 seconds (JVM running for 541.214)
13:31:19.075 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:19.076 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
13:31:19.518 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:19.518 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
13:31:19.525 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:31:19.526 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
13:31:19.535 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 16
13:31:19.536 logback DEBUG c.v.f.controller.FunctionController - 002---002
13:31:19.536 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
13:31:19.536 logback DEBUG c.v.f.controller.FunctionController - 003---003000
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 004---004
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 005---005
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 001---001
13:31:19.537 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
13:31:30.233 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:30.233 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
13:31:30.546 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:30.546 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:31:30.550 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:31:30.553 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
13:31:30.556 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 6
13:31:32.579 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:32.579 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:31:32.580 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:31:32.581 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
13:31:32.583 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:31:33.489 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:33.490 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:31:33.492 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:31:33.493 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
13:31:33.496 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
13:31:34.362 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:34.362 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:31:34.364 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:31:34.365 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
13:31:34.367 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
13:31:34.855 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:34.855 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:31:34.857 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:31:34.858 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 5000(Integer)
13:31:34.862 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:31:35.897 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:35.898 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:31:35.900 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:31:35.901 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 1000(Integer)
13:31:35.905 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:31:36.408 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:36.408 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:31:36.409 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:31:36.409 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999000(Integer)
13:31:36.413 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
13:31:42.566 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:42.567 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
13:31:42.762 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:42.762 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
13:31:42.770 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
13:31:42.773 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
13:31:42.778 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
13:31:44.307 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:44.307 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
13:31:44.309 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:31:44.315 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
13:31:44.322 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:44.322 logback DEBUG c.v.interceptor.AuthInterceptor - /error
13:31:48.424 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:48.424 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
13:31:48.426 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:31:48.427 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 3(Integer)
13:31:48.435 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:31:48.435 logback DEBUG c.v.interceptor.AuthInterceptor - /error
13:33:14.266 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:33:14.267 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:33:14.268 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:33:15.903 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:33:15.905 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:33:15.954 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:33:16.642 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.46 seconds (JVM running for 682.97)
13:33:33.233 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:33:33.234 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
13:33:33.475 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:33:33.475 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
13:33:33.483 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
13:33:33.484 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
13:33:33.489 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
13:33:35.611 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:33:35.611 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
13:33:35.613 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:33:35.614 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
13:33:35.625 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 17
13:33:42.146 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:33:42.147 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/saveStatFunc
13:33:42.164 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - ==>  Preparing: delete from sys_sta_function where ds_id = ? 
13:33:42.167 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - ==> Parameters: 1(Integer)
13:33:42.168 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - <==    Updates: 16
13:33:42.169 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.175 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 2000(String)
13:33:42.176 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.176 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.176 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 2001(String)
13:33:42.177 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.177 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.177 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 3000(String)
13:33:42.178 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.178 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.179 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 4000(String)
13:33:42.179 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.179 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.180 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 5000(String)
13:33:42.180 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.180 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.181 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999102(String)
13:33:42.241 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.242 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.242 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999000(String)
13:33:42.242 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.243 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.243 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999001(String)
13:33:42.243 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.244 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.244 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999003(String)
13:33:42.244 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.245 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.245 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999004(String)
13:33:42.246 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.246 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.246 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999014(String)
13:33:42.247 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.247 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.247 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999015(String)
13:33:42.247 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.247 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.248 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999016(String)
13:33:42.248 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.248 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.249 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999100(String)
13:33:42.249 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.250 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.250 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999101(String)
13:33:42.251 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.251 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.252 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 1000(String)
13:33:42.252 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:42.253 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
13:33:42.253 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 1001(String)
13:33:42.253 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
13:33:44.521 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:33:44.521 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
13:33:44.938 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:33:44.938 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
13:33:44.944 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:33:44.945 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
13:33:44.951 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 17
13:33:44.953 logback DEBUG c.v.f.controller.FunctionController - 002---002
13:33:44.953 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
13:33:44.953 logback DEBUG c.v.f.controller.FunctionController - 003---003000
13:33:44.953 logback DEBUG c.v.f.controller.FunctionController - 004---004
13:33:44.953 logback DEBUG c.v.f.controller.FunctionController - 005---005
13:33:44.953 logback DEBUG c.v.f.controller.FunctionController - 005001---005001
13:33:44.953 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
13:33:44.953 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
13:33:44.953 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
13:33:44.954 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
13:33:44.954 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
13:33:44.954 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
13:33:44.954 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
13:33:44.954 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
13:33:44.954 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
13:33:44.954 logback DEBUG c.v.f.controller.FunctionController - 001---001
13:33:44.954 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
13:33:52.254 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:33:52.254 logback DEBUG c.v.interceptor.AuthInterceptor - /user/user
13:33:52.588 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:33:52.588 logback DEBUG c.v.interceptor.AuthInterceptor - /user/getUsers
13:33:52.625 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:33:52.625 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
13:33:52.653 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select flag_id as id,flag_name as text from sys_user_flag 
13:33:52.654 logback DEBUG c.v.f.dao.UserDao.selectUsers_COUNT - ==>  Preparing: SELECT count(0) FROM sys_user a INNER JOIN sys_user_flag b ON a.flag_id = b.flag_id INNER JOIN sys_deptsta c ON a.ds_id = c.ds_id LEFT JOIN sys_user_dept d ON a.user_id = d.user_id LEFT JOIN sys_dept e ON d.dept_id = e.dept_id WHERE a.user_name LIKE concat('%', ?, '%') AND a.login_name LIKE concat('%', ?, '%') 
13:33:52.654 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
13:33:52.655 logback DEBUG c.v.f.dao.UserDao.selectUsers_COUNT - ==> Parameters: (String), (String)
13:33:52.657 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 3
13:33:52.657 logback DEBUG c.v.f.dao.UserDao.selectUsers_COUNT - <==      Total: 1
13:33:52.662 logback DEBUG c.v.f.dao.UserDao.selectUsers - ==>  Preparing: select a.user_id,a.user_name,a.login_name,a.ds_id,a.flag_id,a.work_no,a.create_time,b.flag_name,c.ds_code,c.ds_name,concat(c.lock_flag,c.ds_total_name) as ds_total_name,c.ds_flag,c.lock_flag, ifnull(d.dept_id,'') dept_id,ifnull(e.dept_name,'') dept_name from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id left join sys_user_dept d on a.user_id=d.user_id left join sys_dept e on d.dept_id=e.dept_id where a.user_name like concat('%',?,'%') and a.login_name like concat('%',?,'%') LIMIT ? 
13:33:52.665 logback DEBUG c.v.f.dao.UserDao.selectUsers - ==> Parameters: (String), (String), 20(Integer)
13:33:52.691 logback DEBUG c.v.f.dao.UserDao.selectUsers - <==      Total: 20
13:33:55.941 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:33:55.941 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
13:33:56.128 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:33:56.128 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
13:33:56.129 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
13:33:56.130 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
13:33:56.133 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
13:33:59.317 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:33:59.317 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
13:33:59.317 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:33:59.318 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
13:33:59.328 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 17
13:37:52.872 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:37:52.873 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
13:37:53.273 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:37:53.273 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
13:37:53.278 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:37:53.279 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
13:37:53.284 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 17
13:37:53.284 logback DEBUG c.v.f.controller.FunctionController - 002---002
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 003---003000
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 004---004
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 005---005
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 005001---005001
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 999003
---组织架构管理
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 001---001
13:37:53.285 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
13:37:56.301 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:37:56.301 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
13:37:56.613 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:37:56.613 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:37:56.615 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:37:56.616 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
13:37:56.618 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 6
13:37:58.073 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:37:58.073 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
13:37:58.078 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
13:37:58.079 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
13:37:58.080 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 6
13:38:10.141 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:38:10.141 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
13:38:10.144 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
13:38:10.145 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: (String)
13:38:10.147 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 1
13:38:10.148 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==>  Preparing: select if(func_id is null,1,func_id+1) from sys_function order by func_id desc limit 1 
13:38:10.149 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==> Parameters: 
13:38:10.150 logback DEBUG c.v.f.d.F.insertFunction!selectKey - <==      Total: 1
13:38:10.151 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==>  Preparing: insert into sys_function (func_id, func_code, func_name, func_path, is_last) values (?, ?, ?, ?, ?, ?) 
13:38:10.153 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==> Parameters: 999103(Integer), 000(String), 006(String), (String), 0(Byte), 6(Integer)
13:38:10.160 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:38:10.160 logback DEBUG c.v.interceptor.AuthInterceptor - /error
13:39:36.163 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:39:36.164 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:39:36.164 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:39:38.158 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:39:38.158 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:39:38.180 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:39:38.641 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.594 seconds (JVM running for 1064.96)
13:39:58.274 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:39:58.274 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:39:58.275 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:40:00.439 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:40:00.440 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:40:00.483 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:40:01.153 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.973 seconds (JVM running for 1087.471)
13:40:03.852 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:40:03.853 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:40:03.853 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:40:05.075 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:40:05.076 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:40:05.096 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:40:05.485 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.697 seconds (JVM running for 1091.804)
13:40:05.648 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:40:05.651 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
13:40:05.909 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:40:05.909 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:40:05.915 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:40:05.916 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
13:40:05.920 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 6
13:40:08.677 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:40:08.677 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
13:40:08.680 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
13:40:08.681 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
13:40:08.686 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 6
13:40:14.361 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:40:14.361 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
13:40:14.365 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
13:40:14.366 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: (String)
13:40:14.367 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 1
13:40:14.368 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==>  Preparing: select if(func_id is null,1,func_id+1) from sys_function order by func_id desc limit 1 
13:40:14.368 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==> Parameters: 
13:40:14.369 logback DEBUG c.v.f.d.F.insertFunction!selectKey - <==      Total: 1
13:40:14.369 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==>  Preparing: insert into sys_function (func_id, func_code, func_name, func_path, is_last) values (?, ?, ?, ?, ?, ?) 
13:40:14.370 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==> Parameters: 999103(Integer), 000(String), 006(String), (String), 0(Byte), 6(Integer)
13:40:14.378 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:40:14.378 logback DEBUG c.v.interceptor.AuthInterceptor - /error
13:41:10.315 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:41:10.315 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:41:10.315 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:41:11.480 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:41:11.480 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:41:11.499 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:41:11.911 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.654 seconds (JVM running for 1158.228)
13:41:17.429 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:41:17.430 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
13:41:17.438 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
13:41:17.439 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: (String)
13:41:17.440 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 1
13:41:17.441 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==>  Preparing: select if(func_id is null,1,func_id+1) from sys_function order by func_id desc limit 1 
13:41:17.441 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==> Parameters: 
13:41:17.442 logback DEBUG c.v.f.d.F.insertFunction!selectKey - <==      Total: 1
13:41:17.443 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==>  Preparing: insert into sys_function (func_id, func_code, func_name, func_path, is_last, order_value) values (?, ?, ?, ?, ?, ?) 
13:41:17.443 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==> Parameters: 999103(Integer), 000(String), 006(String), (String), 0(Byte), 6(Integer)
13:41:17.458 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - <==    Updates: 1
13:41:17.588 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:41:17.588 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:41:17.589 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:41:17.590 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
13:41:17.592 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
13:42:05.789 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:05.789 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
13:42:05.792 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
13:42:05.793 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
13:42:05.796 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 7
13:42:14.277 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:14.278 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
13:42:14.280 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
13:42:14.281 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: 000(String)
13:42:14.282 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 0
13:42:14.283 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==>  Preparing: select if(func_id is null,1,func_id+1) from sys_function order by func_id desc limit 1 
13:42:14.284 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==> Parameters: 
13:42:14.285 logback DEBUG c.v.f.d.F.insertFunction!selectKey - <==      Total: 1
13:42:14.285 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==>  Preparing: insert into sys_function (func_id, func_code, func_name, func_path, is_last, order_value) values (?, ?, ?, ?, ?, ?) 
13:42:14.286 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==> Parameters: 999104(Integer), 000001(String), 006001(String), fdsaf(String), 1(Byte), 1(Integer)
13:42:14.287 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - <==    Updates: 1
13:42:14.389 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:14.389 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:42:14.390 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:42:14.390 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
13:42:14.393 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
13:42:16.471 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:16.472 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:42:16.472 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:42:16.472 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999103(Integer)
13:42:16.476 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:42:21.545 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:21.545 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:42:21.546 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:42:21.547 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 5000(Integer)
13:42:21.553 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:42:24.502 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:24.503 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:42:24.504 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:42:24.504 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
13:42:24.505 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
13:42:27.011 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:27.011 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
13:42:27.013 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
13:42:27.013 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
13:42:27.014 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 7
13:42:37.236 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:37.237 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
13:42:37.239 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
13:42:37.239 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: 005(String)
13:42:37.241 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 1
13:42:37.242 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==>  Preparing: select if(func_id is null,1,func_id+1) from sys_function order by func_id desc limit 1 
13:42:37.242 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==> Parameters: 
13:42:37.243 logback DEBUG c.v.f.d.F.insertFunction!selectKey - <==      Total: 1
13:42:37.244 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==>  Preparing: insert into sys_function (func_id, func_code, func_name, func_path, is_last, order_value) values (?, ?, ?, ?, ?, ?) 
13:42:37.244 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==> Parameters: 999105(Integer), 005002(String), 005002(String), fffffffff(String), 1(Byte), 1(Integer)
13:42:37.277 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - <==    Updates: 1
13:42:37.383 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:37.384 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:42:37.385 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:42:37.385 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
13:42:37.387 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
13:42:40.049 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:40.049 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:42:40.050 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:42:40.050 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 5000(Integer)
13:42:40.052 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 2
13:42:49.573 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:49.574 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:42:49.576 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:42:49.576 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
13:42:49.578 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
13:42:50.821 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:50.822 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:42:50.822 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:42:50.823 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999103(Integer)
13:42:50.825 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:42:52.878 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:52.878 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:42:52.879 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:42:52.879 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
13:42:52.882 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
13:42:54.330 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:42:54.331 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
13:42:54.333 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
13:42:54.333 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
13:42:54.337 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 7
13:43:02.282 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:43:02.282 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
13:43:02.285 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
13:43:02.286 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: 004(String)
13:43:02.287 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 0
13:43:02.287 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==>  Preparing: select if(func_id is null,1,func_id+1) from sys_function order by func_id desc limit 1 
13:43:02.288 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==> Parameters: 
13:43:02.289 logback DEBUG c.v.f.d.F.insertFunction!selectKey - <==      Total: 1
13:43:02.289 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==>  Preparing: insert into sys_function (func_id, func_code, func_name, func_path, is_last, order_value) values (?, ?, ?, ?, ?, ?) 
13:43:02.289 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==> Parameters: 999106(Integer), 004001(String), 004001(String), ggggggg(String), 1(Byte), 1(Integer)
13:43:02.290 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - <==    Updates: 1
13:43:02.387 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:43:02.388 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:43:02.388 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:43:02.389 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
13:43:02.391 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
13:43:04.542 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:43:04.542 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:43:04.544 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:43:04.545 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
13:43:04.548 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:43:07.701 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:43:07.702 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:43:07.702 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:43:07.702 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 5000(Integer)
13:43:07.704 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 2
13:43:10.562 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:43:10.563 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:43:10.564 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:43:10.565 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999103(Integer)
13:43:10.570 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:43:11.237 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:43:11.237 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:43:11.238 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:43:11.238 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999000(Integer)
13:43:11.242 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
13:43:12.477 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:43:12.478 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:43:12.480 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:43:12.481 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 1000(Integer)
13:43:12.485 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:43:23.156 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:43:23.156 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:43:23.158 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:43:23.158 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
13:43:23.161 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
13:43:23.581 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:43:23.581 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:43:23.583 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select func_id, func_code, func_name, func_path, is_last, (case is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by order_value,func_code 
13:43:23.583 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
13:43:23.590 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:44:08.995 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:44:08.995 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:44:08.996 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:44:10.456 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:44:10.457 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:44:10.499 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:44:10.924 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.023 seconds (JVM running for 1337.236)
13:44:14.950 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:44:14.950 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:44:14.950 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:44:16.086 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:44:16.087 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:44:16.109 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:44:16.497 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.616 seconds (JVM running for 1342.808)
13:49:22.491 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:49:22.491 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:49:22.492 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:49:24.098 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:49:24.099 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:49:24.120 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:49:24.518 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.148 seconds (JVM running for 1650.821)
13:49:28.487 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:49:28.488 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:49:28.488 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:49:29.593 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:49:29.593 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:49:29.613 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:49:30.005 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.572 seconds (JVM running for 1656.308)
13:49:46.281 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
13:49:46.281 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
13:49:46.282 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
13:49:47.559 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
13:49:47.559 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
13:49:47.581 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
13:49:47.985 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.777 seconds (JVM running for 1674.288)
13:49:48.092 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:49:48.093 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
13:49:48.402 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:49:48.402 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:49:48.409 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:49:48.411 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
13:49:48.450 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
13:49:52.366 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:49:52.367 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:49:52.368 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:49:52.368 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 1000(Integer)
13:49:52.370 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:49:52.840 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:49:52.841 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:49:52.843 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:49:52.844 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999000(Integer)
13:49:52.847 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
13:49:57.989 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:49:57.989 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:49:57.993 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:49:57.995 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999103(Integer)
13:49:58.006 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:49:58.483 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:49:58.483 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:49:58.484 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:49:58.485 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 5000(Integer)
13:49:58.488 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 2
13:49:58.998 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:49:58.998 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:49:58.999 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:49:58.999 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
13:49:59.001 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
13:49:59.582 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:49:59.583 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:49:59.585 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:49:59.585 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
13:49:59.588 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
13:50:00.374 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
13:50:00.374 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
13:50:00.375 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
13:50:00.375 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
13:50:00.377 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
14:08:09.999 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
14:08:09.999 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
14:08:10.306 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
14:08:10.306 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
14:08:10.308 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
14:08:10.308 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
14:08:10.310 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
14:08:12.305 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
14:08:12.306 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
14:08:12.308 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
14:08:12.308 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 1000(Integer)
14:08:12.313 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
14:08:12.931 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
14:08:12.931 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
14:08:12.932 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
14:08:12.932 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999000(Integer)
14:08:12.934 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 8
14:08:15.347 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
14:08:15.348 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
14:08:15.349 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
14:08:15.349 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999103(Integer)
14:08:15.351 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
14:08:15.851 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
14:08:15.852 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
14:08:15.854 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
14:08:15.854 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 5000(Integer)
14:08:15.856 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 2
14:08:16.377 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
14:08:16.377 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
14:08:16.380 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
14:08:16.380 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
14:08:16.384 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
14:08:17.408 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
14:08:17.409 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
14:08:17.411 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
14:08:17.412 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
14:08:17.416 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
14:08:17.887 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
14:08:17.887 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
14:08:17.890 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
14:08:17.891 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
14:08:17.895 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
14:09:21.826 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
14:09:21.827 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
14:09:21.833 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
14:09:21.835 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
14:09:21.836 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 7
14:09:49.729 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
14:09:49.729 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
14:09:49.730 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
14:09:51.602 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
14:09:51.603 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
14:09:51.644 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
14:09:52.102 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.459 seconds (JVM running for 2878.373)
14:59:52.344 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
14:59:52.344 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
14:59:52.345 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
14:59:54.911 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
14:59:54.912 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
14:59:54.964 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
14:59:55.507 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 3.249 seconds (JVM running for 5881.701)
14:59:58.945 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
14:59:58.945 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
14:59:58.945 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:00:00.386 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:00:00.387 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:00:00.406 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:00:00.810 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.927 seconds (JVM running for 5887.003)
15:00:22.076 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:00:22.076 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:00:22.076 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:00:23.303 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:00:23.304 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:00:23.323 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:00:23.732 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.713 seconds (JVM running for 5909.924)
15:02:28.893 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:02:28.894 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:02:28.894 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:02:30.526 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:02:30.526 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:02:30.547 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:02:30.944 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.209 seconds (JVM running for 6037.134)
15:29:24.150 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:29:24.150 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:29:24.151 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:29:29.555 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:29:29.555 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:29:29.556 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:29:38.441 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:29:38.441 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:29:38.441 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:29:40.570 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:29:40.570 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:29:40.623 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:29:41.636 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 3.315 seconds (JVM running for 7667.782)
15:29:59.512 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:29:59.513 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:29:59.513 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:30:00.747 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:30:00.747 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:30:00.769 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:30:01.209 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.765 seconds (JVM running for 7687.354)
15:30:21.494 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:30:21.494 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:30:21.495 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:31:46.647 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:31:46.647 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:31:46.648 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:31:49.943 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:31:49.944 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:31:49.981 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:31:50.594 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 4.029 seconds (JVM running for 7796.737)
15:31:55.050 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:31:55.050 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:31:55.050 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:31:56.890 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:31:56.890 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:31:56.952 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:31:57.940 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.944 seconds (JVM running for 7804.083)
15:32:03.115 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:32:03.115 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:32:03.115 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:32:04.538 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:32:04.539 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:32:04.567 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:32:05.553 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.498 seconds (JVM running for 7811.695)
15:32:10.209 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:32:10.209 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:32:10.209 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:32:11.488 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:32:11.488 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:32:11.510 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:32:11.926 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.784 seconds (JVM running for 7818.069)
15:34:11.692 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:34:11.693 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:34:11.693 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:34:14.098 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:34:14.099 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:34:14.122 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:34:14.521 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.921 seconds (JVM running for 7940.66)
15:34:25.192 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:34:25.192 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:34:25.192 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:35:10.553 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:35:10.553 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:35:10.553 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:35:12.054 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:35:12.055 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:35:12.074 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:35:12.529 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.055 seconds (JVM running for 7998.667)
15:35:28.389 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:35:28.389 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:35:28.389 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:35:31.471 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:35:31.471 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:35:31.517 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:35:32.139 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 4.058 seconds (JVM running for 8018.276)
15:35:44.825 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:35:44.826 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:35:44.826 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:36:16.785 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:36:16.785 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:36:16.786 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:36:19.040 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:36:19.041 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:36:19.091 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:36:19.602 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.911 seconds (JVM running for 8065.738)
15:36:52.970 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:36:52.971 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:36:52.971 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:37:04.594 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:37:04.595 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:37:04.595 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:37:07.155 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:37:07.156 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:37:07.177 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:37:07.789 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 3.291 seconds (JVM running for 8113.924)
15:38:52.463 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:38:52.463 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:38:52.464 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:38:57.748 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 81240 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:38:57.748 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:38:57.749 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:39:00.399 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:39:00.400 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:39:00.429 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:39:01.829 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 4.199 seconds (JVM running for 8227.96)
15:39:16.274 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 89472 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:39:16.280 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:39:16.284 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:39:25.279 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:39:25.281 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:39:25.428 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:39:26.741 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 11.147 seconds (JVM running for 12.99)
15:46:36.977 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:46:36.977 logback DEBUG c.v.interceptor.AuthInterceptor - /base/base
15:46:36.983 logback DEBUG c.v.interceptor.AuthInterceptor - 未找到对应的session值
15:46:36.984 logback DEBUG c.v.interceptor.AuthInterceptor - 普通登录页面跳转……
15:46:37.009 logback DEBUG c.v.f.controller.LoginController - login/index
15:46:37.479 logback DEBUG c.v.f.controller.LoginController - /login/code
15:46:37.500 logback DEBUG c.v.f.controller.LoginController - login/index
15:46:37.834 logback DEBUG c.v.f.controller.LoginController - /login/code
15:46:41.877 logback DEBUG c.v.f.controller.LoginController - admin----111
15:46:41.934 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==>  Preparing: select a.*,b.flag_name,c.ds_code,c.ds_name,c.ds_total_name,c.ds_flag,c.lock_flag from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id where a.flag_id=1 and a.login_name = ? 
15:46:42.041 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==> Parameters: admin(String)
15:46:42.063 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - <==      Total: 1
15:46:42.148 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:46:42.148 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
15:46:42.659 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:46:42.659 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
15:46:42.665 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:46:42.683 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
15:46:42.700 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 17
15:46:42.702 logback DEBUG c.v.f.controller.FunctionController - 002---002
15:46:42.703 logback DEBUG c.v.f.controller.FunctionController - 002001---002001
15:46:42.703 logback DEBUG c.v.f.controller.FunctionController - 003---003000
15:46:42.703 logback DEBUG c.v.f.controller.FunctionController - 004---004
15:46:42.704 logback DEBUG c.v.f.controller.FunctionController - 005---005
15:46:42.704 logback DEBUG c.v.f.controller.FunctionController - 005001---005001
15:46:42.704 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
15:46:42.704 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
15:46:42.704 logback DEBUG c.v.f.controller.FunctionController - 999003---组织架构管理
15:46:42.704 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
15:46:42.704 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
15:46:42.704 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
15:46:42.704 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
15:46:42.705 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
15:46:42.705 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
15:46:42.705 logback DEBUG c.v.f.controller.FunctionController - 001---001
15:46:42.705 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
15:46:45.518 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:46:45.518 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
15:46:45.862 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:46:45.862 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:46:45.865 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:46:45.869 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
15:46:45.877 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
15:46:47.708 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:46:47.709 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:46:47.712 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:46:47.713 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
15:46:47.716 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
15:46:48.272 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:46:48.272 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:46:48.273 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:46:48.273 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
15:46:48.276 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
15:46:49.403 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:46:49.404 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:46:49.407 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:46:49.408 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
15:46:49.414 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
15:46:50.921 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:46:50.921 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
15:46:50.957 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
15:46:50.958 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
15:46:50.960 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 7
15:46:57.332 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:46:57.332 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
15:47:29.637 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==>  Preparing: select * from sys_function where func_id=? 
15:47:29.639 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==> Parameters: 2001(Integer)
15:47:29.641 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - <==      Total: 1
15:47:52.425 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
15:47:52.431 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: 02(String)
15:47:52.433 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 0
15:48:42.000 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==>  Preparing: update sys_function set func_code = ?, func_name = ?, func_path = ?, order_value = ? where func_id = ? 
15:48:42.015 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==> Parameters: 002001(String), 0020011(String), 123213121(String), 2(Integer), 2001(Integer)
15:48:42.017 logback DEBUG c.v.f.d.F.updateByPrimaryKey - <==    Updates: 1
15:48:42.135 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:48:42.136 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:48:42.137 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:48:42.137 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
15:48:42.142 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
15:48:45.391 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 89472 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:48:45.392 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:48:45.392 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:48:47.101 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:48:47.102 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:48:47.134 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:48:47.589 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.279 seconds (JVM running for 573.824)
15:48:47.718 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:48:47.719 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:48:47.739 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:48:47.742 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
15:48:47.745 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
15:54:12.436 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:54:12.436 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:54:12.439 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:54:12.441 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
15:54:12.451 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
15:54:14.296 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:54:14.296 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
15:54:14.302 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
15:54:14.303 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
15:54:14.306 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 7
15:54:18.544 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:54:18.544 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
15:54:18.550 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==>  Preparing: select * from sys_function where func_id=? 
15:54:18.551 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==> Parameters: 2001(Integer)
15:54:18.553 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - <==      Total: 1
15:54:27.846 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
15:54:27.851 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: 002(String)
15:54:27.858 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 1
15:54:58.675 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==>  Preparing: update sys_function set func_code = ?, func_name = ?, func_path = ?, order_value = ? where func_id = ? 
15:54:58.677 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==> Parameters: 003002(String), 0020011(String), 123213121(String), 2(Integer), 2001(Integer)
15:54:58.680 logback DEBUG c.v.f.d.F.updateByPrimaryKey - <==    Updates: 1
15:54:58.774 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:54:58.775 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:54:58.776 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:54:58.776 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
15:54:58.789 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
15:55:04.928 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:55:04.929 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:55:04.931 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:55:04.933 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
15:55:04.936 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
15:55:05.760 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:55:05.760 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:55:05.764 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:55:05.765 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
15:55:05.770 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
15:55:06.972 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:55:06.973 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:55:06.977 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:55:06.978 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
15:55:06.980 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
15:56:23.823 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:56:23.824 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
15:56:24.143 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:56:24.143 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:56:24.145 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:56:24.145 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
15:56:24.151 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
15:56:25.067 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:56:25.067 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:56:25.068 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:56:25.069 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
15:56:25.070 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
15:56:26.110 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:56:26.111 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:56:26.113 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:56:26.114 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
15:56:26.117 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
15:58:07.455 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:58:07.456 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
15:58:07.785 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:58:07.785 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:58:07.787 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:58:07.787 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
15:58:07.790 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
15:58:08.723 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:58:08.723 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:58:08.725 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:58:08.725 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
15:58:08.728 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
15:58:09.865 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:58:09.865 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
15:58:09.867 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
15:58:09.867 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
15:58:09.869 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 7
15:58:15.030 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:58:15.030 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
15:58:15.032 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==>  Preparing: select * from sys_function where func_id=? 
15:58:15.033 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==> Parameters: 2001(Integer)
15:58:15.034 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - <==      Total: 1
15:58:28.622 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
15:58:28.622 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: 002(String)
15:58:28.624 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 1
15:59:00.603 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==>  Preparing: update sys_function set func_code = ?, func_name = ?, func_path = ?, order_value = ? where func_id = ? 
15:59:00.604 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==> Parameters: 003002(String), 0020011(String), 123213121(String), 2(Integer), 2001(Integer)
15:59:00.616 logback DEBUG c.v.f.d.F.updateByPrimaryKey - <==    Updates: 1
15:59:00.763 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:59:00.763 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:59:00.764 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:59:00.764 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
15:59:00.767 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
15:59:02.726 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 89472 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
15:59:02.726 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
15:59:02.726 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
15:59:04.313 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
15:59:04.314 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
15:59:04.350 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
15:59:04.840 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.202 seconds (JVM running for 1191.059)
15:59:05.930 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:59:05.937 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:59:05.950 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:59:05.952 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
15:59:05.954 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
15:59:06.368 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:59:06.368 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:59:06.370 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:59:06.372 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
15:59:06.375 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
15:59:26.184 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:59:26.184 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
15:59:26.193 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
15:59:26.196 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
15:59:26.200 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 7
15:59:31.509 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:59:31.509 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
15:59:31.515 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==>  Preparing: select * from sys_function where func_id=? 
15:59:31.516 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==> Parameters: 2001(Integer)
15:59:31.517 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - <==      Total: 1
15:59:36.884 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
15:59:36.887 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: 002(String)
15:59:36.890 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 0
15:59:39.160 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==>  Preparing: update sys_function set func_code = ?, func_name = ?, func_path = ?, order_value = ? where func_id = ? 
15:59:39.165 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==> Parameters: 002001(String), 0020011(String), 123213121(String), 3(Integer), 2001(Integer)
15:59:39.168 logback DEBUG c.v.f.d.F.updateByPrimaryKey - <==    Updates: 1
15:59:39.265 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:59:39.267 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:59:39.269 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:59:39.269 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
15:59:39.272 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
15:59:44.807 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:59:44.807 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:59:44.808 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:59:44.809 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
15:59:44.811 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
15:59:46.415 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:59:46.416 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:59:46.418 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:59:46.419 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
15:59:46.429 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
15:59:49.304 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:59:49.305 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
15:59:49.306 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
15:59:49.306 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
15:59:49.308 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 7
15:59:52.767 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:59:52.767 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
15:59:52.770 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==>  Preparing: select * from sys_function where func_id=? 
15:59:52.770 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==> Parameters: 2001(Integer)
15:59:52.772 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - <==      Total: 1
15:59:59.153 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
15:59:59.154 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: 003(String)
15:59:59.157 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 0
15:59:59.159 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==>  Preparing: update sys_function set func_code = ?, func_name = ?, func_path = ?, order_value = ? where func_id = ? 
15:59:59.160 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==> Parameters: 003001(String), 0020011(String), 123213121(String), 2(Integer), 2001(Integer)
15:59:59.162 logback DEBUG c.v.f.d.F.updateByPrimaryKey - <==    Updates: 1
15:59:59.279 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
15:59:59.279 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
15:59:59.280 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
15:59:59.280 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
15:59:59.287 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
16:00:03.506 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:03.507 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:03.507 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:03.508 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
16:00:03.510 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 0
16:00:04.240 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:04.240 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:04.242 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:04.242 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
16:00:04.245 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:00:09.160 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:09.160 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:09.161 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:09.161 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
16:00:09.163 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:00:10.012 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:10.013 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:10.016 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:10.017 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 5000(Integer)
16:00:10.024 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 2
16:00:11.322 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:11.323 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:11.327 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:11.327 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999103(Integer)
16:00:11.330 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:00:12.254 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:12.254 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:12.256 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:12.256 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999000(Integer)
16:00:12.260 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 8
16:00:13.494 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:13.494 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:13.496 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:13.497 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 1000(Integer)
16:00:13.502 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:00:19.402 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:19.402 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
16:00:19.406 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
16:00:19.406 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
16:00:19.411 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 7
16:00:22.162 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:22.162 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
16:00:22.164 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==>  Preparing: select * from sys_function where func_id=? 
16:00:22.164 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==> Parameters: 999105(Integer)
16:00:22.165 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - <==      Total: 1
16:00:22.166 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
16:00:22.166 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: 002(String)
16:00:22.167 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 0
16:00:22.167 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==>  Preparing: update sys_function set func_code = ?, func_name = ?, func_path = ?, order_value = ? where func_id = ? 
16:00:22.168 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==> Parameters: 002001(String), 005002(String), fffffffff(String), 5(Integer), 999105(Integer)
16:00:22.168 logback DEBUG c.v.f.d.F.updateByPrimaryKey - <==    Updates: 1
16:00:22.269 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:22.269 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:22.270 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:22.271 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
16:00:22.274 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
16:00:24.397 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:24.397 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:24.399 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:24.400 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
16:00:24.404 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:00:25.502 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:25.503 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:25.505 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:25.505 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
16:00:25.510 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:00:26.508 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:26.508 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:26.510 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:26.510 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 4000(Integer)
16:00:26.513 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:00:27.376 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:27.376 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:27.377 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:27.377 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 5000(Integer)
16:00:27.379 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:00:28.897 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:28.897 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:28.898 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:28.898 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999103(Integer)
16:00:28.899 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:00:29.845 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:29.846 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:29.848 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:29.848 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999000(Integer)
16:00:29.856 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 8
16:00:31.154 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:00:31.154 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:00:31.155 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:00:31.156 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 1000(Integer)
16:00:31.158 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:01:39.581 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:01:39.582 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
16:01:39.584 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
16:01:39.584 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
16:01:39.586 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 7
16:01:51.262 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:01:51.262 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
16:01:51.266 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
16:01:51.266 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: 000(String)
16:01:51.267 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 1
16:01:51.268 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==>  Preparing: select if(func_id is null,1,func_id+1) from sys_function order by func_id desc limit 1 
16:01:51.269 logback DEBUG c.v.f.d.F.insertFunction!selectKey - ==> Parameters: 
16:01:51.271 logback DEBUG c.v.f.d.F.insertFunction!selectKey - <==      Total: 1
16:01:51.272 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==>  Preparing: insert into sys_function (func_id, func_code, func_name, func_path, is_last, order_value) values (?, ?, ?, ?, ?, ?) 
16:01:51.284 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - ==> Parameters: 999107(Integer), 000002(String), 006003(String), fdsa(String), 1(Byte), 1(Integer)
16:01:51.313 logback DEBUG c.v.f.dao.FunctionDao.insertFunction - <==    Updates: 1
16:01:51.448 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:01:51.448 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:01:51.449 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:01:51.449 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
16:01:51.452 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
16:01:53.493 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:01:53.494 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:01:53.505 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:01:53.505 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999103(Integer)
16:01:53.510 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 2
16:01:59.472 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:01:59.473 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:01:59.475 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:01:59.476 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 2000(Integer)
16:01:59.482 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:02:01.519 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:01.520 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:02:01.521 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:02:01.521 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 3000(Integer)
16:02:01.523 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:02:04.820 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:04.821 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
16:02:04.822 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select func_code as id,func_name as text from sys_function where is_last=0 order by func_code 
16:02:04.822 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
16:02:04.824 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 7
16:02:07.552 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:07.552 logback DEBUG c.v.interceptor.AuthInterceptor - /function/saveFunction
16:02:07.555 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==>  Preparing: select * from sys_function where func_id=? 
16:02:07.556 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - ==> Parameters: 999105(Integer)
16:02:07.557 logback DEBUG c.v.f.dao.FunctionDao.selectFunction - <==      Total: 1
16:02:07.558 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==>  Preparing: select func_code from sys_function where func_code like concat(?,'___') order by func_code desc limit 1 
16:02:07.558 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - ==> Parameters: 000(String)
16:02:07.559 logback DEBUG c.v.f.dao.FunctionDao.selectMaxCode - <==      Total: 1
16:02:07.560 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==>  Preparing: update sys_function set func_code = ?, func_name = ?, func_path = ?, order_value = ? where func_id = ? 
16:02:07.561 logback DEBUG c.v.f.d.F.updateByPrimaryKey - ==> Parameters: 000003(String), 005002(String), fffffffff(String), 2(Integer), 999105(Integer)
16:02:07.561 logback DEBUG c.v.f.d.F.updateByPrimaryKey - <==    Updates: 1
16:02:07.652 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:07.652 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:02:07.653 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:02:07.653 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
16:02:07.656 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
16:02:09.869 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:09.870 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:02:09.873 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:02:09.874 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 999103(Integer)
16:02:09.880 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 3
16:02:21.053 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:21.053 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
16:02:21.536 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:21.536 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
16:02:21.537 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:02:21.539 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
16:02:21.542 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 17
16:02:21.542 logback DEBUG c.v.f.controller.FunctionController - 002---002
16:02:21.542 logback DEBUG c.v.f.controller.FunctionController - 003---003000
16:02:21.542 logback DEBUG c.v.f.controller.FunctionController - 003001---0020011
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 004---004
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 005---005
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 005001---005001
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 999003---组织架构管理
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 001---001
16:02:21.543 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
16:02:34.622 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:34.622 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
16:02:34.935 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:34.935 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:02:34.936 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:02:34.936 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
16:02:34.938 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
16:02:37.458 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:37.459 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
16:02:37.648 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:37.648 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
16:02:37.655 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
16:02:37.656 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
16:02:37.663 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
16:02:39.007 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:39.007 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
16:02:39.008 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:02:39.009 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
16:02:39.015 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 22
16:02:44.961 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:44.961 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/saveStatFunc
16:02:44.964 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - ==>  Preparing: delete from sys_sta_function where ds_id = ? 
16:02:44.967 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - ==> Parameters: 1(Integer)
16:02:44.968 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - <==    Updates: 17
16:02:44.969 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.970 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 2000(String)
16:02:44.972 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.972 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.973 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 3000(String)
16:02:44.974 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.974 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.975 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 2001(String)
16:02:44.976 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.976 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.976 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 4000(String)
16:02:44.977 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.977 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.977 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999106(String)
16:02:44.978 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.978 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.978 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 5000(String)
16:02:44.979 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.979 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.979 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999102(String)
16:02:44.980 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.980 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.980 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999103(String)
16:02:44.981 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.982 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.982 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999104(String)
16:02:44.983 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.983 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.983 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999107(String)
16:02:44.984 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.984 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.985 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999105(String)
16:02:44.985 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.986 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.986 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999000(String)
16:02:44.986 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.987 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.987 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999001(String)
16:02:44.987 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.988 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.988 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999003(String)
16:02:44.988 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.989 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.989 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999004(String)
16:02:44.990 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.990 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.990 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999014(String)
16:02:44.991 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.992 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.992 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999015(String)
16:02:44.992 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.993 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.993 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999016(String)
16:02:44.994 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.994 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.994 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999100(String)
16:02:44.995 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.995 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.995 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 999101(String)
16:02:44.995 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.996 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.996 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 1000(String)
16:02:44.996 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:44.996 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:02:44.996 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 1001(String)
16:02:44.997 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:02:53.455 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:53.456 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
16:02:53.825 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:02:53.825 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
16:02:53.826 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:02:53.826 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
16:02:53.830 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 22
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 002---002
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 003---003000
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 003001---0020011
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 004---004
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 004001---004001
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 005---005
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 005001---005001
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 000---006
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 000001---006001
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 000002---006003
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 000003---005002
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 999---系统管理
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 999001---个人密码修改
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 999003---组织架构管理
16:02:53.831 logback DEBUG c.v.f.controller.FunctionController - 999004---登录账号管理
16:02:53.832 logback DEBUG c.v.f.controller.FunctionController - 999014---系统模块管理
16:02:53.832 logback DEBUG c.v.f.controller.FunctionController - 999015---基础模板设定
16:02:53.832 logback DEBUG c.v.f.controller.FunctionController - 999016---查询模板设定3
16:02:53.832 logback DEBUG c.v.f.controller.FunctionController - 999100---运行信息监控
16:02:53.832 logback DEBUG c.v.f.controller.FunctionController - 999101---基础模板测试
16:02:53.832 logback DEBUG c.v.f.controller.FunctionController - 001---001
16:02:53.832 logback DEBUG c.v.f.controller.FunctionController - 001001---001001
16:03:06.859 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:06.859 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
16:03:07.191 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:07.191 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:03:07.192 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:03:07.192 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
16:03:07.193 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 7
16:03:07.937 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:07.937 logback DEBUG c.v.interceptor.AuthInterceptor - /user/changePwd
16:03:09.962 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:09.962 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
16:03:10.175 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:10.175 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
16:03:10.176 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
16:03:10.176 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
16:03:10.183 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
16:03:11.775 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:11.775 logback DEBUG c.v.interceptor.AuthInterceptor - /user/user
16:03:11.954 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:11.954 logback DEBUG c.v.interceptor.AuthInterceptor - /user/getUsers
16:03:11.997 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:11.997 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
16:03:11.998 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select flag_id as id,flag_name as text from sys_user_flag 
16:03:11.999 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
16:03:12.000 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 3
16:03:12.033 logback DEBUG c.v.f.dao.UserDao.selectUsers_COUNT - ==>  Preparing: SELECT count(0) FROM sys_user a INNER JOIN sys_user_flag b ON a.flag_id = b.flag_id INNER JOIN sys_deptsta c ON a.ds_id = c.ds_id LEFT JOIN sys_user_dept d ON a.user_id = d.user_id LEFT JOIN sys_dept e ON d.dept_id = e.dept_id WHERE a.user_name LIKE concat('%', ?, '%') AND a.login_name LIKE concat('%', ?, '%') 
16:03:12.034 logback DEBUG c.v.f.dao.UserDao.selectUsers_COUNT - ==> Parameters: (String), (String)
16:03:12.036 logback DEBUG c.v.f.dao.UserDao.selectUsers_COUNT - <==      Total: 1
16:03:12.043 logback DEBUG c.v.f.dao.UserDao.selectUsers - ==>  Preparing: select a.user_id,a.user_name,a.login_name,a.ds_id,a.flag_id,a.work_no,a.create_time,b.flag_name,c.ds_code,c.ds_name,concat(c.lock_flag,c.ds_total_name) as ds_total_name,c.ds_flag,c.lock_flag, ifnull(d.dept_id,'') dept_id,ifnull(e.dept_name,'') dept_name from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id left join sys_user_dept d on a.user_id=d.user_id left join sys_dept e on d.dept_id=e.dept_id where a.user_name like concat('%',?,'%') and a.login_name like concat('%',?,'%') LIMIT ? 
16:03:12.044 logback DEBUG c.v.f.dao.UserDao.selectUsers - ==> Parameters: (String), (String), 20(Integer)
16:03:12.065 logback DEBUG c.v.f.dao.UserDao.selectUsers - <==      Total: 20
16:03:17.550 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:17.550 logback DEBUG c.v.interceptor.AuthInterceptor - /base/mana
16:03:17.779 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:17.779 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
16:03:17.780 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select field_type as id,field_type_name as text from bas_field_type 
16:03:17.780 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
16:03:17.782 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 5
16:03:18.009 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:18.009 logback DEBUG c.v.interceptor.AuthInterceptor - /base/getBaseMain
16:03:18.022 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==>  Preparing: SELECT count(0) FROM bas_main WHERE bs_name LIKE concat('%', ?, '%') AND table_name LIKE concat('%', ?, '%') 
16:03:18.023 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==> Parameters: (String), (String)
16:03:18.025 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - <==      Total: 1
16:03:18.026 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==>  Preparing: select * from bas_main where bs_name like concat('%',?,'%') and table_name like concat('%',?,'%') LIMIT ? 
16:03:18.027 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==> Parameters: (String), (String), 20(Integer)
16:03:18.029 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - <==      Total: 1
16:03:20.994 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:20.994 logback DEBUG c.v.interceptor.AuthInterceptor - /error
16:03:21.976 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:21.976 logback DEBUG c.v.interceptor.AuthInterceptor - /base/base
16:03:21.977 logback DEBUG c.v.base.controller.BaseController - 1
16:03:21.978 logback DEBUG c.v.base.dao.BaseDao.getBaseDetail - ==>  Preparing: select bas_detail.*,bas_field_type.field_type_name from bas_detail inner join bas_field_type on bas_detail.field_type=bas_field_type.field_type where bas_detail.bs_id=? order by bas_detail.detail_id 
16:03:21.979 logback DEBUG c.v.base.dao.BaseDao.getBaseDetail - ==> Parameters: 1(Integer)
16:03:21.982 logback DEBUG c.v.base.dao.BaseDao.getBaseDetail - <==      Total: 8
16:03:22.205 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:22.206 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
16:03:22.206 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select dept_id as id,dept_name as text from sys_dept where dept_name like concat('%',?,'%') 
16:03:22.207 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: (String)
16:03:22.208 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 1
16:03:22.399 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:22.400 logback DEBUG c.v.interceptor.AuthInterceptor - /base/getList
16:03:22.401 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==>  Preparing: select a.* from bas_main a where a.bs_id=? limit 1 
16:03:22.402 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==> Parameters: 1(Integer)
16:03:22.403 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - <==      Total: 1
16:03:22.404 logback DEBUG c.v.b.service.impl.BaseServiceImpl - select setup_id,setup_intr,setup_value,date_format(setup_time,'%Y-%m-%d') as setup_time,setup_rich,date_format(setup_datetime,'%Y-%m-%d %H:%i:%s') as setup_datetime,sys_dept.dept_id,sys_dept.dept_name from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1  limit 0,20
16:03:22.436 logback DEBUG c.v.base.dao.BaseDao.executeSelect - ==>  Preparing: select setup_id,setup_intr,setup_value,date_format(setup_time,'%Y-%m-%d') as setup_time,setup_rich,date_format(setup_datetime,'%Y-%m-%d %H:%i:%s') as setup_datetime,sys_dept.dept_id,sys_dept.dept_name from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1 limit 0,20 
16:03:22.437 logback DEBUG c.v.base.dao.BaseDao.executeSelect - ==> Parameters: 
16:03:22.444 logback DEBUG c.v.base.dao.BaseDao.executeSelect - <==      Total: 20
16:03:22.445 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==>  Preparing: select a.* from bas_main a where a.bs_id=? limit 1 
16:03:22.445 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==> Parameters: 1(Integer)
16:03:22.451 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - <==      Total: 1
16:03:22.451 logback DEBUG c.v.b.service.impl.BaseServiceImpl - select count(*) from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1 
16:03:22.451 logback DEBUG c.v.base.dao.BaseDao.executeCount - ==>  Preparing: select count(*) from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1 
16:03:22.452 logback DEBUG c.v.base.dao.BaseDao.executeCount - ==> Parameters: 
16:03:22.453 logback DEBUG c.v.base.dao.BaseDao.executeCount - <==      Total: 1
16:03:35.916 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:03:35.917 logback DEBUG c.v.interceptor.AuthInterceptor - /error
16:06:32.687 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:32.687 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
16:06:32.888 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:32.888 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
16:06:32.890 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
16:06:32.890 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
16:06:32.893 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
16:06:34.834 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:34.834 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
16:06:34.835 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:06:34.835 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
16:06:34.836 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 9
16:06:38.072 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:38.072 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/saveStatFunc
16:06:38.074 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - ==>  Preparing: delete from sys_sta_function where ds_id = ? 
16:06:38.074 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - ==> Parameters: 1(Integer)
16:06:38.075 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - <==    Updates: 22
16:06:38.075 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:06:38.075 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 1(String)
16:06:38.076 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:06:38.076 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:06:38.076 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 2(String)
16:06:38.077 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:06:38.078 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:06:38.078 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 3(String)
16:06:38.079 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:06:38.079 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:06:38.080 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 4(String)
16:06:38.080 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:06:38.081 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:06:38.084 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 5(String)
16:06:38.085 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:06:38.086 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:06:38.087 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 8(String)
16:06:38.088 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:06:38.088 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:06:38.088 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 6(String)
16:06:38.089 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:06:38.090 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:06:38.090 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 7(String)
16:06:38.090 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:06:38.091 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:06:38.091 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 9(String)
16:06:38.091 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:06:40.873 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:40.873 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
16:06:41.268 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:41.268 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
16:06:41.269 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:06:41.269 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
16:06:41.289 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 9
16:06:41.289 logback DEBUG c.v.f.controller.FunctionController - 000---系统管理
16:06:41.290 logback DEBUG c.v.f.controller.FunctionController - 000001---个人密码修改
16:06:41.290 logback DEBUG c.v.f.controller.FunctionController - 000002---组织架构管理
16:06:41.290 logback DEBUG c.v.f.controller.FunctionController - 000003---登录账号管理
16:06:41.290 logback DEBUG c.v.f.controller.FunctionController - 000004---系统模块管理
16:06:41.290 logback DEBUG c.v.f.controller.FunctionController - 000005---运行信息监控
16:06:41.290 logback DEBUG c.v.f.controller.FunctionController - 000006---基础模板设定
16:06:41.290 logback DEBUG c.v.f.controller.FunctionController - 000007---查询模板设定3
16:06:41.290 logback DEBUG c.v.f.controller.FunctionController - 000008---基础模板测试
16:06:45.004 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:45.005 logback DEBUG c.v.interceptor.AuthInterceptor - /user/changePwd
16:06:45.710 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:45.710 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
16:06:45.928 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:45.928 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
16:06:45.929 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
16:06:45.929 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
16:06:45.932 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
16:06:47.116 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:47.117 logback DEBUG c.v.interceptor.AuthInterceptor - /user/user
16:06:47.322 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:47.322 logback DEBUG c.v.interceptor.AuthInterceptor - /user/getUsers
16:06:47.331 logback DEBUG c.v.f.dao.UserDao.selectUsers_COUNT - ==>  Preparing: SELECT count(0) FROM sys_user a INNER JOIN sys_user_flag b ON a.flag_id = b.flag_id INNER JOIN sys_deptsta c ON a.ds_id = c.ds_id LEFT JOIN sys_user_dept d ON a.user_id = d.user_id LEFT JOIN sys_dept e ON d.dept_id = e.dept_id WHERE a.user_name LIKE concat('%', ?, '%') AND a.login_name LIKE concat('%', ?, '%') 
16:06:47.332 logback DEBUG c.v.f.dao.UserDao.selectUsers_COUNT - ==> Parameters: (String), (String)
16:06:47.334 logback DEBUG c.v.f.dao.UserDao.selectUsers_COUNT - <==      Total: 1
16:06:47.334 logback DEBUG c.v.f.dao.UserDao.selectUsers - ==>  Preparing: select a.user_id,a.user_name,a.login_name,a.ds_id,a.flag_id,a.work_no,a.create_time,b.flag_name,c.ds_code,c.ds_name,concat(c.lock_flag,c.ds_total_name) as ds_total_name,c.ds_flag,c.lock_flag, ifnull(d.dept_id,'') dept_id,ifnull(e.dept_name,'') dept_name from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id left join sys_user_dept d on a.user_id=d.user_id left join sys_dept e on d.dept_id=e.dept_id where a.user_name like concat('%',?,'%') and a.login_name like concat('%',?,'%') LIMIT ? 
16:06:47.335 logback DEBUG c.v.f.dao.UserDao.selectUsers - ==> Parameters: (String), (String), 20(Integer)
16:06:47.344 logback DEBUG c.v.f.dao.UserDao.selectUsers - <==      Total: 20
16:06:47.369 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:47.369 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
16:06:47.372 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select flag_id as id,flag_name as text from sys_user_flag 
16:06:47.372 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
16:06:47.373 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 3
16:06:48.057 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:48.057 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
16:06:48.273 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:48.273 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:06:48.273 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:06:48.274 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 0(Integer)
16:06:48.275 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 1
16:06:50.753 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:06:50.753 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getLevelFunctions
16:06:50.754 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end) as order_value from sys_function a where a.func_code like concat(ifnull((select func_code from sys_function where func_id=?),''),'___') order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:06:50.754 logback DEBUG c.v.f.d.F.selectLevelFunctions - ==> Parameters: 1(Integer)
16:06:50.758 logback DEBUG c.v.f.d.F.selectLevelFunctions - <==      Total: 8
16:07:14.117 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:07:14.117 logback DEBUG c.v.interceptor.AuthInterceptor - /base/base
16:07:14.117 logback DEBUG c.v.base.controller.BaseController - 1
16:07:14.118 logback DEBUG c.v.base.dao.BaseDao.getBaseDetail - ==>  Preparing: select bas_detail.*,bas_field_type.field_type_name from bas_detail inner join bas_field_type on bas_detail.field_type=bas_field_type.field_type where bas_detail.bs_id=? order by bas_detail.detail_id 
16:07:14.118 logback DEBUG c.v.base.dao.BaseDao.getBaseDetail - ==> Parameters: 1(Integer)
16:07:14.135 logback DEBUG c.v.base.dao.BaseDao.getBaseDetail - <==      Total: 8
16:07:14.311 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:07:14.311 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
16:07:14.312 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select dept_id as id,dept_name as text from sys_dept where dept_name like concat('%',?,'%') 
16:07:14.312 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: (String)
16:07:14.313 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 1
16:07:14.505 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:07:14.506 logback DEBUG c.v.interceptor.AuthInterceptor - /base/getList
16:07:14.506 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==>  Preparing: select a.* from bas_main a where a.bs_id=? limit 1 
16:07:14.506 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==> Parameters: 1(Integer)
16:07:14.511 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - <==      Total: 1
16:07:14.512 logback DEBUG c.v.b.service.impl.BaseServiceImpl - select setup_id,setup_intr,setup_value,date_format(setup_time,'%Y-%m-%d') as setup_time,setup_rich,date_format(setup_datetime,'%Y-%m-%d %H:%i:%s') as setup_datetime,sys_dept.dept_id,sys_dept.dept_name from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1  limit 0,20
16:07:14.512 logback DEBUG c.v.base.dao.BaseDao.executeSelect - ==>  Preparing: select setup_id,setup_intr,setup_value,date_format(setup_time,'%Y-%m-%d') as setup_time,setup_rich,date_format(setup_datetime,'%Y-%m-%d %H:%i:%s') as setup_datetime,sys_dept.dept_id,sys_dept.dept_name from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1 limit 0,20 
16:07:14.512 logback DEBUG c.v.base.dao.BaseDao.executeSelect - ==> Parameters: 
16:07:14.514 logback DEBUG c.v.base.dao.BaseDao.executeSelect - <==      Total: 20
16:07:14.514 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==>  Preparing: select a.* from bas_main a where a.bs_id=? limit 1 
16:07:14.515 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==> Parameters: 1(Integer)
16:07:14.516 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - <==      Total: 1
16:07:14.516 logback DEBUG c.v.b.service.impl.BaseServiceImpl - select count(*) from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1 
16:07:14.517 logback DEBUG c.v.base.dao.BaseDao.executeCount - ==>  Preparing: select count(*) from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1 
16:07:14.517 logback DEBUG c.v.base.dao.BaseDao.executeCount - ==> Parameters: 
16:07:14.517 logback DEBUG c.v.base.dao.BaseDao.executeCount - <==      Total: 1
16:12:18.455 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:12:18.456 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
16:12:18.858 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:12:18.858 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
16:12:18.859 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:12:18.860 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
16:12:18.862 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 9
16:12:18.862 logback DEBUG c.v.f.controller.FunctionController - 000---系统管理
16:12:18.862 logback DEBUG c.v.f.controller.FunctionController - 000001---个人密码修改
16:12:18.862 logback DEBUG c.v.f.controller.FunctionController - 000002---组织架构管理
16:12:18.862 logback DEBUG c.v.f.controller.FunctionController - 000003---登录账号管理
16:12:18.863 logback DEBUG c.v.f.controller.FunctionController - 000004---系统模块管理
16:12:18.863 logback DEBUG c.v.f.controller.FunctionController - 000005---运行信息监控
16:12:18.863 logback DEBUG c.v.f.controller.FunctionController - 000006---基础模板设定
16:12:18.863 logback DEBUG c.v.f.controller.FunctionController - 000007---查询模板设定
16:12:18.863 logback DEBUG c.v.f.controller.FunctionController - 000008---基础模板测试
16:12:20.992 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:12:20.993 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
16:12:21.243 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:12:21.243 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
16:12:21.244 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
16:12:21.244 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
16:12:21.246 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
16:12:22.880 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:12:22.880 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
16:12:22.881 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:12:22.881 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
16:12:22.884 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 10
16:12:25.564 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:12:25.564 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/saveStatFunc
16:12:25.565 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - ==>  Preparing: delete from sys_sta_function where ds_id = ? 
16:12:25.565 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - ==> Parameters: 1(Integer)
16:12:25.566 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - <==    Updates: 9
16:12:25.566 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:12:25.567 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 1(String)
16:12:25.567 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:12:25.568 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:12:25.568 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 2(String)
16:12:25.568 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:12:25.568 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:12:25.569 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 3(String)
16:12:25.569 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:12:25.569 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:12:25.569 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 4(String)
16:12:25.570 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:12:25.570 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:12:25.570 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 5(String)
16:12:25.571 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:12:25.571 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:12:25.571 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 8(String)
16:12:25.572 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:12:25.572 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:12:25.573 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 6(String)
16:12:25.573 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:12:25.573 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:12:25.574 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 7(String)
16:12:25.574 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:12:25.575 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:12:25.575 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 9(String)
16:12:25.576 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:12:25.576 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:12:25.576 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 10(String)
16:12:25.576 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:12:28.795 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:12:28.796 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
16:12:29.155 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:12:29.155 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
16:12:29.155 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:12:29.156 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
16:12:29.158 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 10
16:12:29.159 logback DEBUG c.v.f.controller.FunctionController - 000---系统管理
16:12:29.159 logback DEBUG c.v.f.controller.FunctionController - 000001---个人密码修改
16:12:29.159 logback DEBUG c.v.f.controller.FunctionController - 000002---组织架构管理
16:12:29.159 logback DEBUG c.v.f.controller.FunctionController - 000003---登录账号管理
16:12:29.159 logback DEBUG c.v.f.controller.FunctionController - 000004---系统模块管理
16:12:29.159 logback DEBUG c.v.f.controller.FunctionController - 000005---运行信息监控
16:12:29.159 logback DEBUG c.v.f.controller.FunctionController - 000006---基础模板设定
16:12:29.159 logback DEBUG c.v.f.controller.FunctionController - 000007---查询模板设定
16:12:29.159 logback DEBUG c.v.f.controller.FunctionController - 000008---基础模板测试
16:12:29.159 logback DEBUG c.v.f.controller.FunctionController - 000009---查询模板测试
16:50:07.418 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:50:07.418 logback DEBUG c.v.interceptor.AuthInterceptor - /function/mana
16:50:07.418 logback DEBUG c.v.interceptor.AuthInterceptor - 未找到对应的session值
16:50:07.418 logback DEBUG c.v.interceptor.AuthInterceptor - 普通登录页面跳转……
16:50:07.423 logback DEBUG c.v.f.controller.LoginController - login/index
16:50:07.577 logback DEBUG c.v.f.controller.LoginController - /login/code
16:50:07.596 logback DEBUG c.v.f.controller.LoginController - login/index
16:50:07.785 logback DEBUG c.v.f.controller.LoginController - /login/code
16:50:13.207 logback DEBUG c.v.f.controller.LoginController - admin----111
16:50:13.208 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==>  Preparing: select a.*,b.flag_name,c.ds_code,c.ds_name,c.ds_total_name,c.ds_flag,c.lock_flag from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id where a.flag_id=1 and a.login_name = ? 
16:50:13.209 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==> Parameters: admin(String)
16:50:13.213 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - <==      Total: 1
16:50:13.247 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:50:13.247 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
16:50:13.613 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:50:13.614 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
16:50:13.614 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:50:13.614 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
16:50:13.616 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 10
16:50:13.616 logback DEBUG c.v.f.controller.FunctionController - 000---系统管理
16:50:13.616 logback DEBUG c.v.f.controller.FunctionController - 000001---个人密码修改
16:50:13.616 logback DEBUG c.v.f.controller.FunctionController - 000002---组织架构管理
16:50:13.617 logback DEBUG c.v.f.controller.FunctionController - 000003---登录账号管理
16:50:13.617 logback DEBUG c.v.f.controller.FunctionController - 000004---系统模块管理
16:50:13.617 logback DEBUG c.v.f.controller.FunctionController - 000005---运行信息监控
16:50:13.617 logback DEBUG c.v.f.controller.FunctionController - 000006---基础模板设定
16:50:13.617 logback DEBUG c.v.f.controller.FunctionController - 000007---查询模板设定
16:50:13.617 logback DEBUG c.v.f.controller.FunctionController - 000008---基础模板测试
16:50:13.617 logback DEBUG c.v.f.controller.FunctionController - 000009---查询模板测试
16:50:17.259 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:50:17.259 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/deptsta
16:50:17.519 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:50:17.519 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getDeptsta
16:50:17.520 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==>  Preparing: select ds_id, ds_code, ds_name, ds_total_name, ds_flag, lock_flag, (select count(*) from sys_deptsta a where ds_code like concat(sys_deptsta.ds_code,'___')) as childCount from sys_deptsta where ds_code like concat(ifnull((select ds_code from sys_deptsta where ds_id=?),''),'___') order by ds_flag desc,ds_code 
16:50:17.520 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - ==> Parameters: 0(Integer)
16:50:17.523 logback DEBUG c.v.f.dao.DeptstaDao.selectNextLevel - <==      Total: 12
16:50:18.707 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:50:18.707 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/getFuncsWithRight
16:50:18.708 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last, ifnull(b.ds_id,0) as extField from sys_function a left join sys_sta_function b on a.func_id=b.func_id and b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:50:18.708 logback DEBUG c.v.f.d.F.selectFuncsWithRight - ==> Parameters: 1(Integer)
16:50:18.715 logback DEBUG c.v.f.d.F.selectFuncsWithRight - <==      Total: 10
16:50:20.909 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:50:20.909 logback DEBUG c.v.interceptor.AuthInterceptor - /deptsta/saveStatFunc
16:50:20.912 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - ==>  Preparing: delete from sys_sta_function where ds_id = ? 
16:50:20.912 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - ==> Parameters: 1(Integer)
16:50:20.913 logback DEBUG c.v.f.dao.FunctionDao.deleteStatFunc - <==    Updates: 10
16:50:20.914 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:50:20.914 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 1(String)
16:50:20.915 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:50:20.915 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:50:20.915 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 2(String)
16:50:20.916 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:50:20.917 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:50:20.917 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 3(String)
16:50:20.918 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:50:20.918 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:50:20.918 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 4(String)
16:50:20.919 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:50:20.919 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:50:20.920 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 5(String)
16:50:20.921 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:50:20.921 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:50:20.921 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 6(String)
16:50:20.922 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:50:20.923 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:50:20.923 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 7(String)
16:50:20.924 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:50:20.924 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:50:20.924 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 8(String)
16:50:20.925 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:50:20.925 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:50:20.925 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 9(String)
16:50:20.927 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:50:20.927 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==>  Preparing: insert into sys_sta_function (ds_id, func_id) values (?, ?) 
16:50:20.927 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - ==> Parameters: 1(Integer), 10(String)
16:50:20.928 logback DEBUG c.v.f.dao.FunctionDao.insertStatFunc - <==    Updates: 1
16:50:24.951 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:50:24.951 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
16:50:25.384 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
16:50:25.384 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
16:50:25.385 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
16:50:25.385 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
16:50:25.387 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 10
16:50:25.387 logback DEBUG c.v.f.controller.FunctionController - 000---系统管理
16:50:25.387 logback DEBUG c.v.f.controller.FunctionController - 000001---个人密码修改
16:50:25.387 logback DEBUG c.v.f.controller.FunctionController - 000002---组织架构管理
16:50:25.387 logback DEBUG c.v.f.controller.FunctionController - 000003---登录账号管理
16:50:25.387 logback DEBUG c.v.f.controller.FunctionController - 000004---系统模块管理
16:50:25.387 logback DEBUG c.v.f.controller.FunctionController - 000005---运行信息监控
16:50:25.387 logback DEBUG c.v.f.controller.FunctionController - 000006---基础模板设定
16:50:25.387 logback DEBUG c.v.f.controller.FunctionController - 000007---查询模板设定
16:50:25.388 logback DEBUG c.v.f.controller.FunctionController - 000008---基础模板测试
16:50:25.388 logback DEBUG c.v.f.controller.FunctionController - 000009---查询模板测试
16:58:00.088 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 89472 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
16:58:00.089 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
16:58:00.089 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
17:02:23.308 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 89472 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
17:02:23.308 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
17:02:23.308 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
17:02:25.029 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
17:02:25.030 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
17:02:25.062 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
17:02:25.570 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.394 seconds (JVM running for 4991.689)
17:03:15.230 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 92712 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
17:03:15.234 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
17:03:15.236 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
17:03:21.185 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
17:03:21.186 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
17:03:21.297 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
17:03:22.347 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 8.263 seconds (JVM running for 9.701)
17:03:59.564 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:03:59.564 logback DEBUG c.v.interceptor.AuthInterceptor - /error
17:03:59.569 logback DEBUG c.v.interceptor.AuthInterceptor - 未找到对应的session值
17:03:59.569 logback DEBUG c.v.interceptor.AuthInterceptor - 普通登录页面跳转……
17:03:59.589 logback DEBUG c.v.f.controller.LoginController - login/index
17:03:59.996 logback DEBUG c.v.f.controller.LoginController - /login/code
17:04:00.015 logback DEBUG c.v.f.controller.LoginController - login/index
17:04:00.251 logback DEBUG c.v.f.controller.LoginController - /login/code
17:04:04.402 logback DEBUG c.v.f.controller.LoginController - admin----111
17:04:04.430 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==>  Preparing: select a.*,b.flag_name,c.ds_code,c.ds_name,c.ds_total_name,c.ds_flag,c.lock_flag from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id where a.flag_id=1 and a.login_name = ? 
17:04:04.522 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==> Parameters: admin(String)
17:04:04.541 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - <==      Total: 1
17:04:04.610 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:04:04.610 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
17:04:05.134 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:04:05.134 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
17:04:05.141 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
17:04:05.158 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
17:04:05.165 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 10
17:04:05.166 logback DEBUG c.v.f.controller.FunctionController - 000---系统管理
17:04:05.166 logback DEBUG c.v.f.controller.FunctionController - 000001---个人密码修改
17:04:05.167 logback DEBUG c.v.f.controller.FunctionController - 000002---组织架构管理
17:04:05.167 logback DEBUG c.v.f.controller.FunctionController - 000003---登录账号管理
17:04:05.167 logback DEBUG c.v.f.controller.FunctionController - 000004---系统模块管理
17:04:05.167 logback DEBUG c.v.f.controller.FunctionController - 000005---运行信息监控
17:04:05.167 logback DEBUG c.v.f.controller.FunctionController - 000006---基础模板设定
17:04:05.167 logback DEBUG c.v.f.controller.FunctionController - 000007---查询模板设定
17:04:05.167 logback DEBUG c.v.f.controller.FunctionController - 000008---基础模板测试
17:04:05.167 logback DEBUG c.v.f.controller.FunctionController - 000009---查询模板测试
17:04:09.364 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:04:09.364 logback DEBUG c.v.interceptor.AuthInterceptor - /error
17:04:19.384 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:04:19.384 logback DEBUG c.v.interceptor.AuthInterceptor - /error
17:05:19.505 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 92712 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
17:05:19.505 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
17:05:19.505 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
17:05:21.409 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
17:05:21.409 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
17:05:21.436 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
17:05:21.888 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.468 seconds (JVM running for 129.239)
17:09:39.405 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:09:39.406 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
17:09:39.842 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:09:39.842 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
17:09:39.853 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
17:09:39.855 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
17:09:39.863 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 10
17:09:39.864 logback DEBUG c.v.f.controller.FunctionController - 000---系统管理
17:09:39.864 logback DEBUG c.v.f.controller.FunctionController - 000001---个人密码修改
17:09:39.865 logback DEBUG c.v.f.controller.FunctionController - 000002---组织架构管理
17:09:39.865 logback DEBUG c.v.f.controller.FunctionController - 000003---登录账号管理
17:09:39.865 logback DEBUG c.v.f.controller.FunctionController - 000004---系统模块管理
17:09:39.865 logback DEBUG c.v.f.controller.FunctionController - 000005---运行信息监控
17:09:39.865 logback DEBUG c.v.f.controller.FunctionController - 000006---基础模板设定
17:09:39.865 logback DEBUG c.v.f.controller.FunctionController - 000007---查询模板设定
17:09:39.865 logback DEBUG c.v.f.controller.FunctionController - 000008---基础模板测试
17:09:39.865 logback DEBUG c.v.f.controller.FunctionController - 000009---查询模板测试
17:09:43.144 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:09:43.147 logback DEBUG c.v.interceptor.AuthInterceptor - /error
17:12:09.097 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 92496 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
17:12:09.103 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
17:12:09.106 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
17:12:13.196 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
17:12:13.197 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
17:12:13.314 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
17:12:14.389 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 6.082 seconds (JVM running for 7.609)
17:12:27.397 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:12:27.398 logback DEBUG c.v.interceptor.AuthInterceptor - /search/search
17:12:27.402 logback DEBUG c.v.interceptor.AuthInterceptor - 未找到对应的session值
17:12:27.403 logback DEBUG c.v.interceptor.AuthInterceptor - 普通登录页面跳转……
17:12:27.423 logback DEBUG c.v.f.controller.LoginController - login/index
17:12:27.948 logback DEBUG c.v.f.controller.LoginController - login/index
17:12:27.959 logback DEBUG c.v.f.controller.LoginController - /login/code
17:12:28.235 logback DEBUG c.v.f.controller.LoginController - /login/code
17:12:31.591 logback DEBUG c.v.f.controller.LoginController - admin----111
17:12:31.623 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==>  Preparing: select a.*,b.flag_name,c.ds_code,c.ds_name,c.ds_total_name,c.ds_flag,c.lock_flag from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id where a.flag_id=1 and a.login_name = ? 
17:12:31.718 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==> Parameters: admin(String)
17:12:31.738 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - <==      Total: 1
17:12:31.807 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:12:31.807 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
17:12:32.296 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:12:32.296 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
17:12:32.304 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
17:12:32.319 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
17:12:32.328 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 10
17:12:32.329 logback DEBUG c.v.f.controller.FunctionController - 000---系统管理
17:12:32.329 logback DEBUG c.v.f.controller.FunctionController - 000001---个人密码修改
17:12:32.330 logback DEBUG c.v.f.controller.FunctionController - 000002---组织架构管理
17:12:32.330 logback DEBUG c.v.f.controller.FunctionController - 000003---登录账号管理
17:12:32.330 logback DEBUG c.v.f.controller.FunctionController - 000004---系统模块管理
17:12:32.330 logback DEBUG c.v.f.controller.FunctionController - 000005---运行信息监控
17:12:32.330 logback DEBUG c.v.f.controller.FunctionController - 000006---基础模板设定
17:12:32.330 logback DEBUG c.v.f.controller.FunctionController - 000007---查询模板设定
17:12:32.330 logback DEBUG c.v.f.controller.FunctionController - 000008---基础模板测试
17:12:32.330 logback DEBUG c.v.f.controller.FunctionController - 000009---查询模板测试
17:12:34.978 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:12:34.978 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
17:12:35.014 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:12:35.014 logback DEBUG c.v.interceptor.AuthInterceptor - /error
17:12:36.933 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:12:36.933 logback DEBUG c.v.interceptor.AuthInterceptor - /search/search
17:12:36.944 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:12:36.945 logback DEBUG c.v.interceptor.AuthInterceptor - /error
17:15:23.524 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 92496 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
17:15:23.526 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
17:15:23.527 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
17:15:25.069 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
17:15:25.070 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
17:15:25.101 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
17:15:25.541 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.146 seconds (JVM running for 198.755)
17:19:44.480 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:19:44.481 logback DEBUG c.v.interceptor.AuthInterceptor - /user/user
17:19:44.824 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:19:44.824 logback DEBUG c.v.interceptor.AuthInterceptor - /user/getUsers
17:19:44.874 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:19:44.874 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
17:19:44.903 logback DEBUG c.v.f.dao.UserDao.selectUsers_COUNT - ==>  Preparing: SELECT count(0) FROM sys_user a INNER JOIN sys_user_flag b ON a.flag_id = b.flag_id INNER JOIN sys_deptsta c ON a.ds_id = c.ds_id LEFT JOIN sys_user_dept d ON a.user_id = d.user_id LEFT JOIN sys_dept e ON d.dept_id = e.dept_id WHERE a.user_name LIKE concat('%', ?, '%') AND a.login_name LIKE concat('%', ?, '%') 
17:19:44.907 logback DEBUG c.v.f.dao.UserDao.selectUsers_COUNT - ==> Parameters: (String), (String)
17:19:44.909 logback DEBUG c.v.f.dao.UserDao.selectUsers_COUNT - <==      Total: 1
17:19:44.914 logback DEBUG c.v.f.dao.UserDao.selectUsers - ==>  Preparing: select a.user_id,a.user_name,a.login_name,a.ds_id,a.flag_id,a.work_no,a.create_time,b.flag_name,c.ds_code,c.ds_name,concat(c.lock_flag,c.ds_total_name) as ds_total_name,c.ds_flag,c.lock_flag, ifnull(d.dept_id,'') dept_id,ifnull(e.dept_name,'') dept_name from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id left join sys_user_dept d on a.user_id=d.user_id left join sys_dept e on d.dept_id=e.dept_id where a.user_name like concat('%',?,'%') and a.login_name like concat('%',?,'%') LIMIT ? 
17:19:44.918 logback DEBUG c.v.f.dao.UserDao.selectUsers - ==> Parameters: (String), (String), 20(Integer)
17:19:44.920 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select flag_id as id,flag_name as text from sys_user_flag 
17:19:44.922 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
17:19:44.926 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 3
17:19:44.954 logback DEBUG c.v.f.dao.UserDao.selectUsers - <==      Total: 20
17:19:46.922 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:19:46.923 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
17:19:46.937 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:19:46.937 logback DEBUG c.v.interceptor.AuthInterceptor - /error
17:20:24.761 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 90520 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
17:20:24.769 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
17:20:24.773 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
17:20:30.690 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
17:20:30.691 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
17:20:30.860 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
17:20:32.589 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 8.985 seconds (JVM running for 11.176)
17:20:40.484 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:20:40.484 logback DEBUG c.v.interceptor.AuthInterceptor - /base/mana
17:20:40.491 logback DEBUG c.v.interceptor.AuthInterceptor - 未找到对应的session值
17:20:40.491 logback DEBUG c.v.interceptor.AuthInterceptor - 普通登录页面跳转……
17:20:40.515 logback DEBUG c.v.f.controller.LoginController - login/index
17:20:40.989 logback DEBUG c.v.f.controller.LoginController - /login/code
17:20:41.017 logback DEBUG c.v.f.controller.LoginController - login/index
17:20:41.347 logback DEBUG c.v.f.controller.LoginController - /login/code
17:20:46.683 logback DEBUG c.v.f.controller.LoginController - admin----111
17:20:46.825 logback DEBUG c.v.f.controller.LoginController - /login/code
17:20:50.714 logback DEBUG c.v.f.controller.LoginController - admin----111
17:20:50.752 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==>  Preparing: select a.*,b.flag_name,c.ds_code,c.ds_name,c.ds_total_name,c.ds_flag,c.lock_flag from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id where a.flag_id=1 and a.login_name = ? 
17:20:50.864 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==> Parameters: admin(String)
17:20:50.885 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - <==      Total: 1
17:20:50.909 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:20:50.909 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
17:20:51.392 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:20:51.392 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
17:20:51.398 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
17:20:51.420 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
17:20:51.432 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 10
17:20:51.434 logback DEBUG c.v.f.controller.FunctionController - 000---系统管理
17:20:51.434 logback DEBUG c.v.f.controller.FunctionController - 000001---个人密码修改
17:20:51.435 logback DEBUG c.v.f.controller.FunctionController - 000002---组织架构管理
17:20:51.435 logback DEBUG c.v.f.controller.FunctionController - 000003---登录账号管理
17:20:51.435 logback DEBUG c.v.f.controller.FunctionController - 000004---系统模块管理
17:20:51.435 logback DEBUG c.v.f.controller.FunctionController - 000005---运行信息监控
17:20:51.435 logback DEBUG c.v.f.controller.FunctionController - 000006---基础模板设定
17:20:51.436 logback DEBUG c.v.f.controller.FunctionController - 000007---查询模板设定
17:20:51.436 logback DEBUG c.v.f.controller.FunctionController - 000008---基础模板测试
17:20:51.436 logback DEBUG c.v.f.controller.FunctionController - 000009---查询模板测试
17:20:55.343 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:20:55.343 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
17:21:04.512 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
17:21:04.513 logback DEBUG c.v.interceptor.AuthInterceptor - /error
21:27:45.079 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 93900 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
21:27:45.085 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
21:27:45.088 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
21:27:50.637 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
21:27:50.639 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
21:27:50.787 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
21:27:52.219 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 7.845 seconds (JVM running for 9.604)
21:28:16.342 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:28:16.343 logback DEBUG c.v.interceptor.AuthInterceptor - /search/search
21:28:16.348 logback DEBUG c.v.interceptor.AuthInterceptor - 未找到对应的session值
21:28:16.349 logback DEBUG c.v.interceptor.AuthInterceptor - 普通登录页面跳转……
21:28:16.374 logback DEBUG c.v.f.controller.LoginController - login/index
21:28:16.904 logback DEBUG c.v.f.controller.LoginController - /login/code
21:28:16.915 logback DEBUG c.v.f.controller.LoginController - login/index
21:28:17.192 logback DEBUG c.v.f.controller.LoginController - /login/code
21:28:21.179 logback DEBUG c.v.f.controller.LoginController - admin----111
21:28:21.312 logback DEBUG c.v.f.controller.LoginController - /login/code
21:28:25.017 logback DEBUG c.v.f.controller.LoginController - admin----111
21:28:25.061 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==>  Preparing: select a.*,b.flag_name,c.ds_code,c.ds_name,c.ds_total_name,c.ds_flag,c.lock_flag from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id where a.flag_id=1 and a.login_name = ? 
21:28:25.192 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==> Parameters: admin(String)
21:28:25.223 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - <==      Total: 1
21:28:25.252 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:28:25.253 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
21:28:25.737 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:28:25.737 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
21:28:25.742 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
21:28:25.764 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
21:28:25.775 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 10
21:28:25.777 logback DEBUG c.v.f.controller.FunctionController - 000---系统管理
21:28:25.778 logback DEBUG c.v.f.controller.FunctionController - 000001---个人密码修改
21:28:25.778 logback DEBUG c.v.f.controller.FunctionController - 000002---组织架构管理
21:28:25.778 logback DEBUG c.v.f.controller.FunctionController - 000003---登录账号管理
21:28:25.779 logback DEBUG c.v.f.controller.FunctionController - 000004---系统模块管理
21:28:25.779 logback DEBUG c.v.f.controller.FunctionController - 000005---运行信息监控
21:28:25.779 logback DEBUG c.v.f.controller.FunctionController - 000006---基础模板设定
21:28:25.779 logback DEBUG c.v.f.controller.FunctionController - 000007---查询模板设定
21:28:25.779 logback DEBUG c.v.f.controller.FunctionController - 000008---基础模板测试
21:28:25.779 logback DEBUG c.v.f.controller.FunctionController - 000009---查询模板测试
21:28:29.752 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:28:29.752 logback DEBUG c.v.interceptor.AuthInterceptor - /search/search
21:28:29.796 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:28:29.796 logback DEBUG c.v.interceptor.AuthInterceptor - /error
21:28:33.020 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:28:33.020 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
21:28:33.035 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:28:33.035 logback DEBUG c.v.interceptor.AuthInterceptor - /error
21:55:19.596 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 93900 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
21:55:19.597 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
21:55:19.597 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
21:55:21.665 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
21:55:21.666 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
21:55:21.699 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
21:55:22.173 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.848 seconds (JVM running for 1659.515)
21:55:24.671 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:55:24.673 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
21:55:24.708 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:55:24.708 logback DEBUG c.v.interceptor.AuthInterceptor - /error
21:55:28.079 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:55:28.080 logback DEBUG c.v.interceptor.AuthInterceptor - /base/mana
21:55:28.417 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:55:28.417 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
21:55:28.445 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select field_type as id,field_type_name as text from bas_field_type 
21:55:28.447 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
21:55:28.449 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 5
21:55:28.622 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:55:28.622 logback DEBUG c.v.interceptor.AuthInterceptor - /base/getBaseMain
21:55:28.741 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==>  Preparing: SELECT count(0) FROM bas_main WHERE bs_name LIKE concat('%', ?, '%') AND table_name LIKE concat('%', ?, '%') 
21:55:28.744 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==> Parameters: (String), (String)
21:55:28.746 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - <==      Total: 1
21:55:28.750 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==>  Preparing: select * from bas_main where bs_name like concat('%',?,'%') and table_name like concat('%',?,'%') LIMIT ? 
21:55:28.752 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==> Parameters: (String), (String), 20(Integer)
21:55:28.754 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - <==      Total: 1
21:55:34.733 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:55:34.733 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
21:55:34.737 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:55:34.737 logback DEBUG c.v.interceptor.AuthInterceptor - /error
21:55:49.035 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:55:49.035 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
21:55:49.071 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
21:55:49.071 logback DEBUG c.v.interceptor.AuthInterceptor - /error
21:59:31.576 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 93900 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
21:59:31.576 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
21:59:31.576 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
21:59:33.300 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
21:59:33.301 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
21:59:33.334 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
21:59:33.786 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.35 seconds (JVM running for 1911.121)
22:04:07.157 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:04:07.160 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
22:04:07.203 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:04:07.203 logback DEBUG c.v.interceptor.AuthInterceptor - /error
22:06:44.384 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 93900 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
22:06:44.384 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
22:06:44.385 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
22:06:46.229 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
22:06:46.230 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
22:06:46.264 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
22:06:46.761 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.485 seconds (JVM running for 2344.085)
22:06:48.644 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:06:48.645 logback DEBUG c.v.interceptor.AuthInterceptor - /search/search
22:06:48.683 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:06:48.683 logback DEBUG c.v.interceptor.AuthInterceptor - /error
22:14:54.711 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 93900 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
22:14:54.712 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
22:14:54.712 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
22:14:56.344 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
22:14:56.345 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
22:14:56.373 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
22:14:56.842 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.219 seconds (JVM running for 2834.153)
22:20:11.471 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 93900 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
22:20:11.471 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
22:20:11.472 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
22:20:14.991 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
22:20:14.992 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
22:20:15.056 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
22:20:15.870 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 4.531 seconds (JVM running for 3153.173)
22:20:25.620 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 93900 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
22:20:25.620 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
22:20:25.620 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
22:21:28.414 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 96124 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
22:21:28.420 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
22:21:28.424 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
22:21:33.963 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
22:21:33.964 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
22:21:34.089 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
22:21:35.182 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 7.87 seconds (JVM running for 9.398)
22:21:44.545 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:21:44.546 logback DEBUG c.v.interceptor.AuthInterceptor - /base/mana
22:21:44.551 logback DEBUG c.v.interceptor.AuthInterceptor - 未找到对应的session值
22:21:44.551 logback DEBUG c.v.interceptor.AuthInterceptor - 普通登录页面跳转……
22:21:44.572 logback DEBUG c.v.f.controller.LoginController - login/index
22:21:44.987 logback DEBUG c.v.f.controller.LoginController - login/index
22:21:45.016 logback DEBUG c.v.f.controller.LoginController - /login/code
22:21:45.312 logback DEBUG c.v.f.controller.LoginController - /login/code
22:21:53.741 logback DEBUG c.v.f.controller.LoginController - admin----111
22:21:53.773 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==>  Preparing: select a.*,b.flag_name,c.ds_code,c.ds_name,c.ds_total_name,c.ds_flag,c.lock_flag from sys_user a inner join sys_user_flag b on a.flag_id=b.flag_id inner join sys_deptsta c on a.ds_id=c.ds_id where a.flag_id=1 and a.login_name = ? 
22:21:53.868 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - ==> Parameters: admin(String)
22:21:53.888 logback DEBUG c.v.f.dao.UserDao.selectByLoginname - <==      Total: 1
22:21:53.959 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:21:53.959 logback DEBUG c.v.interceptor.AuthInterceptor - /main/main
22:21:54.496 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:21:54.496 logback DEBUG c.v.interceptor.AuthInterceptor - /function/getMenu
22:21:54.503 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==>  Preparing: select a.func_id, a.func_code, a.func_name, a.func_path, a.is_last from sys_function a inner join sys_sta_function b on a.func_id=b.func_id where b.ds_id=? order by (case a.is_last when 0 then a.order_value else (select order_value from sys_function where substring(a.func_code,1,3)=func_code) end),a.func_code 
22:21:54.523 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - ==> Parameters: 1(Integer)
22:21:54.531 logback DEBUG c.v.f.d.FunctionDao.selectFunctions - <==      Total: 10
22:21:54.532 logback DEBUG c.v.f.controller.FunctionController - 000---系统管理
22:21:54.532 logback DEBUG c.v.f.controller.FunctionController - 000001---个人密码修改
22:21:54.532 logback DEBUG c.v.f.controller.FunctionController - 000002---组织架构管理
22:21:54.533 logback DEBUG c.v.f.controller.FunctionController - 000003---登录账号管理
22:21:54.533 logback DEBUG c.v.f.controller.FunctionController - 000004---系统模块管理
22:21:54.533 logback DEBUG c.v.f.controller.FunctionController - 000005---运行信息监控
22:21:54.533 logback DEBUG c.v.f.controller.FunctionController - 000006---基础模板设定
22:21:54.533 logback DEBUG c.v.f.controller.FunctionController - 000007---查询模板设定
22:21:54.533 logback DEBUG c.v.f.controller.FunctionController - 000008---基础模板测试
22:21:54.533 logback DEBUG c.v.f.controller.FunctionController - 000009---查询模板测试
22:21:57.993 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:21:57.993 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
22:21:58.022 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:21:58.022 logback DEBUG c.v.interceptor.AuthInterceptor - /error
22:22:44.446 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 96124 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
22:22:44.446 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
22:22:44.447 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
22:22:48.456 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
22:22:48.459 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
22:22:48.529 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
22:22:49.138 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 5.045 seconds (JVM running for 83.353)
22:22:54.471 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 96124 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
22:22:54.472 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
22:22:54.473 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
22:22:56.004 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
22:22:56.005 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
22:22:56.035 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
22:22:56.466 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.159 seconds (JVM running for 90.68)
22:22:56.567 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:22:56.568 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
22:22:57.049 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:22:57.049 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
22:22:57.081 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select field_type as id,field_type_name as text from bas_field_type 
22:22:57.082 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
22:22:57.085 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 5
22:22:57.284 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:22:57.284 logback DEBUG c.v.interceptor.AuthInterceptor - /base/getBaseMain
22:22:57.367 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==>  Preparing: SELECT count(0) FROM bas_main WHERE bs_name LIKE concat('%', ?, '%') AND table_name LIKE concat('%', ?, '%') 
22:22:57.370 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==> Parameters: (String), (String)
22:22:57.373 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - <==      Total: 1
22:22:57.378 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==>  Preparing: select * from bas_main where bs_name like concat('%',?,'%') and table_name like concat('%',?,'%') LIMIT ? 
22:22:57.381 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==> Parameters: (String), (String), 20(Integer)
22:22:57.386 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - <==      Total: 1
22:23:01.951 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:23:01.952 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
22:23:02.255 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:23:02.256 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
22:23:02.257 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select field_type as id,field_type_name as text from bas_field_type 
22:23:02.257 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
22:23:02.261 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 5
22:23:02.469 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:23:02.469 logback DEBUG c.v.interceptor.AuthInterceptor - /base/getBaseMain
22:23:02.478 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==>  Preparing: SELECT count(0) FROM bas_main WHERE bs_name LIKE concat('%', ?, '%') AND table_name LIKE concat('%', ?, '%') 
22:23:02.479 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==> Parameters: (String), (String)
22:23:02.482 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - <==      Total: 1
22:23:02.483 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==>  Preparing: select * from bas_main where bs_name like concat('%',?,'%') and table_name like concat('%',?,'%') LIMIT ? 
22:23:02.483 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==> Parameters: (String), (String), 20(Integer)
22:23:02.490 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - <==      Total: 1
22:23:28.576 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 96124 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
22:23:28.576 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
22:23:28.576 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
22:23:29.891 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
22:23:29.891 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
22:23:29.919 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
22:23:30.410 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 1.902 seconds (JVM running for 124.624)
22:23:31.383 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:23:31.384 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
22:23:31.414 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:23:31.414 logback DEBUG c.v.interceptor.AuthInterceptor - /error
22:28:25.191 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 96124 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
22:28:25.192 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
22:28:25.192 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
22:28:27.761 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
22:28:27.762 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
22:28:27.795 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
22:28:28.337 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 3.286 seconds (JVM running for 422.543)
22:28:38.645 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:28:38.651 logback DEBUG c.v.interceptor.AuthInterceptor - /base/mana
22:28:38.963 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:28:38.963 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
22:28:38.968 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select field_type as id,field_type_name as text from bas_field_type 
22:28:38.969 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
22:28:38.996 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 5
22:28:39.159 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:28:39.159 logback DEBUG c.v.interceptor.AuthInterceptor - /base/getBaseMain
22:28:39.174 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==>  Preparing: SELECT count(0) FROM bas_main WHERE bs_name LIKE concat('%', ?, '%') AND table_name LIKE concat('%', ?, '%') 
22:28:39.175 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==> Parameters: (String), (String)
22:28:39.177 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - <==      Total: 1
22:28:39.178 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==>  Preparing: select * from bas_main where bs_name like concat('%',?,'%') and table_name like concat('%',?,'%') LIMIT ? 
22:28:39.179 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==> Parameters: (String), (String), 20(Integer)
22:28:39.181 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - <==      Total: 1
22:28:40.433 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:28:40.433 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
22:28:40.439 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:28:40.439 logback DEBUG c.v.interceptor.AuthInterceptor - /error
22:29:31.449 logback INFO  c.v.Vanguard8FrameworkApplication - Starting Vanguard8FrameworkApplication on WIN-20170817QZC with PID 96124 (E:\vanguard8\framework\target\classes started by Administrator in E:\vanguard8)
22:29:31.449 logback DEBUG c.v.Vanguard8FrameworkApplication - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
22:29:31.449 logback INFO  c.v.Vanguard8FrameworkApplication - No active profile set, falling back to default profiles: default
22:29:33.005 logback INFO  c.v.interceptor.InterceptorConfig - 开始注册权限拦截器……
22:29:33.006 logback INFO  c.v.interceptor.InterceptorConfig - 权限拦截器注册完成！
22:29:33.036 logback INFO  c.v.interceptor.InterceptorConfig - 开放静态资源访问……
22:29:33.532 logback INFO  c.v.Vanguard8FrameworkApplication - Started Vanguard8FrameworkApplication in 2.171 seconds (JVM running for 487.736)
22:29:41.907 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:29:41.908 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
22:29:42.254 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:29:42.254 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
22:29:42.260 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select field_type as id,field_type_name as text from bas_field_type 
22:29:42.262 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: 
22:29:42.264 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 5
22:29:42.487 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:29:42.487 logback DEBUG c.v.interceptor.AuthInterceptor - /base/getBaseMain
22:29:42.500 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==>  Preparing: SELECT count(0) FROM bas_main WHERE bs_name LIKE concat('%', ?, '%') AND table_name LIKE concat('%', ?, '%') 
22:29:42.501 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - ==> Parameters: (String), (String)
22:29:42.503 logback DEBUG c.v.b.d.BaseDao.getAllBaseMain_COUNT - <==      Total: 1
22:29:42.504 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==>  Preparing: select * from bas_main where bs_name like concat('%',?,'%') and table_name like concat('%',?,'%') LIMIT ? 
22:29:42.506 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - ==> Parameters: (String), (String), 20(Integer)
22:29:42.508 logback DEBUG c.v.base.dao.BaseDao.getAllBaseMain - <==      Total: 1
22:29:46.223 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:29:46.223 logback DEBUG c.v.interceptor.AuthInterceptor - /search/search
22:30:29.421 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:30:29.421 logback DEBUG c.v.interceptor.AuthInterceptor - /search/mana
22:30:31.922 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:30:31.922 logback DEBUG c.v.interceptor.AuthInterceptor - /search/search
22:30:34.187 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:30:34.187 logback DEBUG c.v.interceptor.AuthInterceptor - /base/base
22:30:34.187 logback DEBUG c.v.base.controller.BaseController - 1
22:30:34.188 logback DEBUG c.v.base.dao.BaseDao.getBaseDetail - ==>  Preparing: select bas_detail.*,bas_field_type.field_type_name from bas_detail inner join bas_field_type on bas_detail.field_type=bas_field_type.field_type where bas_detail.bs_id=? order by bas_detail.detail_id 
22:30:34.189 logback DEBUG c.v.base.dao.BaseDao.getBaseDetail - ==> Parameters: 1(Integer)
22:30:34.193 logback DEBUG c.v.base.dao.BaseDao.getBaseDetail - <==      Total: 8
22:30:34.402 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:30:34.402 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
22:30:34.403 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select dept_id as id,dept_name as text from sys_dept where dept_name like concat('%',?,'%') 
22:30:34.405 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: (String)
22:30:34.408 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 1
22:30:34.613 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:30:34.613 logback DEBUG c.v.interceptor.AuthInterceptor - /base/getList
22:30:34.615 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==>  Preparing: select a.* from bas_main a where a.bs_id=? limit 1 
22:30:34.616 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==> Parameters: 1(Integer)
22:30:34.618 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - <==      Total: 1
22:30:34.621 logback DEBUG c.v.b.service.impl.BaseServiceImpl - select setup_id,setup_intr,setup_value,date_format(setup_time,'%Y-%m-%d') as setup_time,setup_rich,date_format(setup_datetime,'%Y-%m-%d %H:%i:%s') as setup_datetime,sys_dept.dept_id,sys_dept.dept_name from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1  limit 0,20
22:30:34.623 logback DEBUG c.v.base.dao.BaseDao.executeSelect - ==>  Preparing: select setup_id,setup_intr,setup_value,date_format(setup_time,'%Y-%m-%d') as setup_time,setup_rich,date_format(setup_datetime,'%Y-%m-%d %H:%i:%s') as setup_datetime,sys_dept.dept_id,sys_dept.dept_name from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1 limit 0,20 
22:30:34.629 logback DEBUG c.v.base.dao.BaseDao.executeSelect - ==> Parameters: 
22:30:34.639 logback DEBUG c.v.base.dao.BaseDao.executeSelect - <==      Total: 20
22:30:34.640 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==>  Preparing: select a.* from bas_main a where a.bs_id=? limit 1 
22:30:34.640 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==> Parameters: 1(Integer)
22:30:34.643 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - <==      Total: 1
22:30:34.643 logback DEBUG c.v.b.service.impl.BaseServiceImpl - select count(*) from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1 
22:30:34.644 logback DEBUG c.v.base.dao.BaseDao.executeCount - ==>  Preparing: select count(*) from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1 
22:30:34.645 logback DEBUG c.v.base.dao.BaseDao.executeCount - ==> Parameters: 
22:30:34.647 logback DEBUG c.v.base.dao.BaseDao.executeCount - <==      Total: 1
22:30:42.886 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:30:42.886 logback DEBUG c.v.interceptor.AuthInterceptor - /base/base
22:30:42.886 logback DEBUG c.v.base.controller.BaseController - 1
22:30:42.887 logback DEBUG c.v.base.dao.BaseDao.getBaseDetail - ==>  Preparing: select bas_detail.*,bas_field_type.field_type_name from bas_detail inner join bas_field_type on bas_detail.field_type=bas_field_type.field_type where bas_detail.bs_id=? order by bas_detail.detail_id 
22:30:42.887 logback DEBUG c.v.base.dao.BaseDao.getBaseDetail - ==> Parameters: 1(Integer)
22:30:42.903 logback DEBUG c.v.base.dao.BaseDao.getBaseDetail - <==      Total: 8
22:30:43.055 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:30:43.055 logback DEBUG c.v.interceptor.AuthInterceptor - /dict/getDict
22:30:43.056 logback DEBUG c.v.framework.dao.DictDao.getDict - ==>  Preparing: select dept_id as id,dept_name as text from sys_dept where dept_name like concat('%',?,'%') 
22:30:43.057 logback DEBUG c.v.framework.dao.DictDao.getDict - ==> Parameters: (String)
22:30:43.058 logback DEBUG c.v.framework.dao.DictDao.getDict - <==      Total: 1
22:30:43.259 logback DEBUG c.v.interceptor.AuthInterceptor - 执行preHandle方法-->01
22:30:43.259 logback DEBUG c.v.interceptor.AuthInterceptor - /base/getList
22:30:43.260 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==>  Preparing: select a.* from bas_main a where a.bs_id=? limit 1 
22:30:43.260 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==> Parameters: 1(Integer)
22:30:43.264 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - <==      Total: 1
22:30:43.264 logback DEBUG c.v.b.service.impl.BaseServiceImpl - select setup_id,setup_intr,setup_value,date_format(setup_time,'%Y-%m-%d') as setup_time,setup_rich,date_format(setup_datetime,'%Y-%m-%d %H:%i:%s') as setup_datetime,sys_dept.dept_id,sys_dept.dept_name from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1  limit 0,20
22:30:43.265 logback DEBUG c.v.base.dao.BaseDao.executeSelect - ==>  Preparing: select setup_id,setup_intr,setup_value,date_format(setup_time,'%Y-%m-%d') as setup_time,setup_rich,date_format(setup_datetime,'%Y-%m-%d %H:%i:%s') as setup_datetime,sys_dept.dept_id,sys_dept.dept_name from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1 limit 0,20 
22:30:43.265 logback DEBUG c.v.base.dao.BaseDao.executeSelect - ==> Parameters: 
22:30:43.276 logback DEBUG c.v.base.dao.BaseDao.executeSelect - <==      Total: 20
22:30:43.278 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==>  Preparing: select a.* from bas_main a where a.bs_id=? limit 1 
22:30:43.278 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - ==> Parameters: 1(Integer)
22:30:43.280 logback DEBUG c.v.base.dao.BaseDao.getBaseMain - <==      Total: 1
22:30:43.280 logback DEBUG c.v.b.service.impl.BaseServiceImpl - select count(*) from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1 
22:30:43.281 logback DEBUG c.v.base.dao.BaseDao.executeCount - ==>  Preparing: select count(*) from sys_setup left join sys_dept on sys_setup.dept_id=sys_dept.dept_id where 1=1 
22:30:43.281 logback DEBUG c.v.base.dao.BaseDao.executeCount - ==> Parameters: 
22:30:43.283 logback DEBUG c.v.base.dao.BaseDao.executeCount - <==      Total: 1
